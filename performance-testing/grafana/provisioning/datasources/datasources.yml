apiVersion: 1

datasources:
  # Prometheus/Mimir for metrics
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: true
    jsonData:
      timeInterval: "5s"
      queryTimeout: "60s"
      httpMethod: "POST"

  - name: Mimir
    type: prometheus
    access: proxy
    url: http://mimir:9009/prometheus
    editable: true
    jsonData:
      timeInterval: "5s"
      queryTimeout: "60s"
      httpMethod: "POST"
      customQueryParameters: "X-Scope-OrgID=performance-testing"

  # Loki for logs
  - name: Loki
    type: loki
    access: proxy
    url: http://loki:3100
    editable: true
    jsonData:
      maxLines: 1000
      derivedFields:
        - datasourceUid: tempo
          matcherRegex: "trace_id=(\\w+)"
          name: "TraceID"
          url: "$${__value.raw}"

  # Tempo for traces
  - name: Tempo
    type: tempo
    access: proxy
    url: http://tempo:3200
    editable: true
    jsonData:
      tracesToLogsV2:
        datasourceUid: loki
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        tags: ['job', 'instance', 'pod', 'namespace']
        filterByTraceID: false
        filterBySpanID: false
        customQuery: true
        query: 'method="${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: prometheus
        spanStartTimeShift: '-1h'
        spanEndTimeShift: '1h'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      serviceMap:
        datasourceUid: prometheus
      nodeGraph:
        enabled: true
      search:
        hide: false
      lokiSearch:
        datasourceUid: loki

  # K6 specific datasource for performance metrics
  - name: K6
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    editable: true
    jsonData:
      timeInterval: "1s"
      queryTimeout: "60s"
      httpMethod: "POST"
      customQueryParameters: "job=k6"

  # cAdvisor for container metrics
  - name: cAdvisor
    type: prometheus
    access: proxy
    url: http://cadvisor:8080
    editable: true
    jsonData:
      timeInterval: "15s"

  # Node Exporter for system metrics
  - name: NodeExporter
    type: prometheus
    access: proxy
    url: http://node-exporter:9100
    editable: true
    jsonData:
      timeInterval: "15s"

  # PyAirtable Application Metrics
  - name: PyAirtableMetrics
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    editable: true
    jsonData:
      timeInterval: "5s"
      queryTimeout: "60s"
      httpMethod: "POST"
      customQueryParameters: "job=pyairtable"

  # Performance Testing Results Database
  - name: PerformanceDB
    type: postgres
    access: proxy
    url: postgres:5432
    database: performance_results
    user: performance
    secureJsonData:
      password: performance123
    jsonData:
      sslmode: disable
      maxOpenConns: 10
      maxIdleConns: 2
      connMaxLifetime: 14400