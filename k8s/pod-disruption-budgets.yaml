# Pod Disruption Budgets for High Availability
# Tasks: immediate-7 through immediate-10 - Create and deploy PDBs for all critical services

# API Gateway PDB - Most critical service
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: pyairtable
  labels:
    app: api-gateway
    tier: critical
    component: gateway
spec:
  minAvailable: 2  # Always keep at least 2 replicas running
  selector:
    matchLabels:
      app: api-gateway
---
# Platform Services PDB - Core functionality
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: platform-services-pdb
  namespace: pyairtable
  labels:
    app: platform-services
    tier: critical
    component: core
spec:
  minAvailable: 1  # Keep at least 1 replica for auth and analytics
  selector:
    matchLabels:
      app: platform-services
---
# Automation Services PDB - Workflow processing
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: automation-services-pdb
  namespace: pyairtable
  labels:
    app: automation-services
    tier: important
    component: workflow
spec:
  minAvailable: 1  # Keep workflow processing available
  selector:
    matchLabels:
      app: automation-services
---
# LLM Orchestrator PDB - AI services
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: llm-orchestrator-pdb
  namespace: pyairtable
  labels:
    app: llm-orchestrator
    tier: critical
    component: ai
spec:
  minAvailable: 1  # Keep AI services available
  selector:
    matchLabels:
      app: llm-orchestrator
---
# MCP Server PDB - Protocol implementation
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mcp-server-pdb
  namespace: pyairtable
  labels:
    app: mcp-server
    tier: important
    component: protocol
spec:
  minAvailable: 1  # Keep protocol server available
  selector:
    matchLabels:
      app: mcp-server
---
# Airtable Gateway PDB - External integration
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: airtable-gateway-pdb
  namespace: pyairtable
  labels:
    app: airtable-gateway
    tier: important
    component: integration
spec:
  minAvailable: 1  # Keep Airtable integration available
  selector:
    matchLabels:
      app: airtable-gateway
---
# PostgreSQL PDB - Database
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgres-pdb
  namespace: pyairtable
  labels:
    app: postgres
    tier: critical
    component: database
spec:
  minAvailable: 1  # Database must always be available
  selector:
    matchLabels:
      app: postgres
---
# Redis PDB - Cache and sessions
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-pdb
  namespace: pyairtable
  labels:
    app: redis
    tier: critical
    component: cache
spec:
  minAvailable: 1  # Cache and session store availability
  selector:
    matchLabels:
      app: redis
---
# Go Services PDBs - Auth Service (most critical Go service)
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: auth-service-pdb
  namespace: pyairtable
  labels:
    app: auth-service
    tier: critical
    component: auth
spec:
  minAvailable: 1  # Authentication must be available
  selector:
    matchLabels:
      app: auth-service
---
# User Service PDB
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: user-service-pdb
  namespace: pyairtable
  labels:
    app: user-service
    tier: important
    component: user-management
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: user-service
---
# Workspace Service PDB
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: workspace-service-pdb
  namespace: pyairtable
  labels:
    app: workspace-service
    tier: important
    component: workspace
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: workspace-service
---
# Permission Service PDB - Critical for RBAC
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: permission-service-pdb
  namespace: pyairtable
  labels:
    app: permission-service
    tier: critical
    component: rbac
spec:
  minAvailable: 1  # RBAC must be available
  selector:
    matchLabels:
      app: permission-service
---
# Frontend Services PDB - Main dashboard
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: dashboard-frontend-pdb
  namespace: pyairtable
  labels:
    app: dashboard-frontend
    tier: important
    component: frontend
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: dashboard-frontend
---
# Flexible PDB for non-critical services (allows more disruption)
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: non-critical-services-pdb
  namespace: pyairtable
  labels:
    tier: non-critical
spec:
  maxUnavailable: 50%  # Allow up to 50% of non-critical services to be disrupted
  selector:
    matchLabels:
      tier: non-critical
---
# Development services PDB (more lenient)
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: development-services-pdb
  namespace: pyairtable-dev
  labels:
    environment: development
spec:
  maxUnavailable: 75%  # Development can tolerate more disruption
  selector:
    matchLabels:
      environment: development