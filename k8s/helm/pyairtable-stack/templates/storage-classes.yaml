{{- if .Values.storageClasses.create }}
# Development Storage Class - Fast SSD for local development
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: postgres-dev-ssd
  labels:
    {{- include "pyairtable-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
    environment: development
  annotations:
    storageclass.kubernetes.io/is-default-class: {{ .Values.storageClasses.dev.isDefault | default "false" | quote }}
provisioner: {{ .Values.storageClasses.dev.provisioner | default "kubernetes.io/no-provisioner" }}
parameters:
  type: {{ .Values.storageClasses.dev.type | default "ssd" }}
  {{- if .Values.storageClasses.dev.fsType }}
  fsType: {{ .Values.storageClasses.dev.fsType }}
  {{- end }}
  {{- if .Values.storageClasses.dev.encrypted }}
  encrypted: {{ .Values.storageClasses.dev.encrypted | quote }}
  {{- end }}
  {{- if .Values.storageClasses.dev.iops }}
  iops: {{ .Values.storageClasses.dev.iops | quote }}
  {{- end }}
volumeBindingMode: {{ .Values.storageClasses.dev.volumeBindingMode | default "WaitForFirstConsumer" }}
allowVolumeExpansion: {{ .Values.storageClasses.dev.allowVolumeExpansion | default true }}
reclaimPolicy: {{ .Values.storageClasses.dev.reclaimPolicy | default "Delete" }}
{{- if .Values.storageClasses.dev.mountOptions }}
mountOptions:
{{- toYaml .Values.storageClasses.dev.mountOptions | nindent 2 }}
{{- end }}
---
# Staging Storage Class - Balanced performance and cost
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: postgres-staging-balanced
  labels:
    {{- include "pyairtable-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
    environment: staging
provisioner: {{ .Values.storageClasses.staging.provisioner | default "kubernetes.io/gce-pd" }}
parameters:
  type: {{ .Values.storageClasses.staging.type | default "pd-balanced" }}
  {{- if .Values.storageClasses.staging.fsType }}
  fsType: {{ .Values.storageClasses.staging.fsType }}
  {{- end }}
  {{- if .Values.storageClasses.staging.encrypted }}
  encrypted: {{ .Values.storageClasses.staging.encrypted | quote }}
  {{- end }}
  {{- if .Values.storageClasses.staging.zones }}
  zones: {{ .Values.storageClasses.staging.zones }}
  {{- end }}
  {{- if .Values.storageClasses.staging.replicationType }}
  replication-type: {{ .Values.storageClasses.staging.replicationType }}
  {{- end }}
volumeBindingMode: {{ .Values.storageClasses.staging.volumeBindingMode | default "WaitForFirstConsumer" }}
allowVolumeExpansion: {{ .Values.storageClasses.staging.allowVolumeExpansion | default true }}
reclaimPolicy: {{ .Values.storageClasses.staging.reclaimPolicy | default "Retain" }}
{{- if .Values.storageClasses.staging.mountOptions }}
mountOptions:
{{- toYaml .Values.storageClasses.staging.mountOptions | nindent 2 }}
{{- end }}
---
# Production Storage Class - High performance, encrypted, multi-zone
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: postgres-prod-ssd
  labels:
    {{- include "pyairtable-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
    environment: production
provisioner: {{ .Values.storageClasses.prod.provisioner | default "kubernetes.io/gce-pd" }}
parameters:
  type: {{ .Values.storageClasses.prod.type | default "pd-ssd" }}
  fsType: {{ .Values.storageClasses.prod.fsType | default "ext4" }}
  encrypted: {{ .Values.storageClasses.prod.encrypted | default "true" | quote }}
  {{- if .Values.storageClasses.prod.zones }}
  zones: {{ .Values.storageClasses.prod.zones }}
  {{- end }}
  {{- if .Values.storageClasses.prod.replicationType }}
  replication-type: {{ .Values.storageClasses.prod.replicationType }}
  {{- end }}
  {{- if .Values.storageClasses.prod.iops }}
  iops: {{ .Values.storageClasses.prod.iops | quote }}
  {{- end }}
  {{- if .Values.storageClasses.prod.throughput }}
  throughput: {{ .Values.storageClasses.prod.throughput | quote }}
  {{- end }}
volumeBindingMode: {{ .Values.storageClasses.prod.volumeBindingMode | default "WaitForFirstConsumer" }}
allowVolumeExpansion: {{ .Values.storageClasses.prod.allowVolumeExpansion | default true }}
reclaimPolicy: {{ .Values.storageClasses.prod.reclaimPolicy | default "Retain" }}
{{- if .Values.storageClasses.prod.mountOptions }}
mountOptions:
{{- toYaml .Values.storageClasses.prod.mountOptions | nindent 2 }}
{{- end }}
---
# Backup Storage Class - Cost-optimized for backups
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: postgres-backup-standard
  labels:
    {{- include "pyairtable-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
    purpose: backup
provisioner: {{ .Values.storageClasses.backup.provisioner | default "kubernetes.io/gce-pd" }}
parameters:
  type: {{ .Values.storageClasses.backup.type | default "pd-standard" }}
  fsType: {{ .Values.storageClasses.backup.fsType | default "ext4" }}
  {{- if .Values.storageClasses.backup.encrypted }}
  encrypted: {{ .Values.storageClasses.backup.encrypted | quote }}
  {{- end }}
  {{- if .Values.storageClasses.backup.zones }}
  zones: {{ .Values.storageClasses.backup.zones }}
  {{- end }}
volumeBindingMode: {{ .Values.storageClasses.backup.volumeBindingMode | default "Immediate" }}
allowVolumeExpansion: {{ .Values.storageClasses.backup.allowVolumeExpansion | default true }}
reclaimPolicy: {{ .Values.storageClasses.backup.reclaimPolicy | default "Retain" }}
{{- if .Values.storageClasses.backup.mountOptions }}
mountOptions:
{{- toYaml .Values.storageClasses.backup.mountOptions | nindent 2 }}
{{- end }}
{{- end }}