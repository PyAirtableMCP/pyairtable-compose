# Vertical Pod Autoscaler for Resource Recommendation Analysis
# Task: immediate-2 - Install Vertical Pod Autoscaler (VPA) for resource recommendation analysis

# VPA CRD for recommendations
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes/kubernetes/pull/63797
  name: verticalpodautoscalers.autoscaling.k8s.io
spec:
  group: autoscaling.k8s.io
  scope: Namespaced
  names:
    plural: verticalpodautoscalers
    singular: verticalpodautoscaler
    kind: VerticalPodAutoscaler
    shortNames:
    - vpa
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              targetRef:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
              updatePolicy:
                type: object
                properties:
                  updateMode:
                    type: string
                    enum: ["Off", "Initial", "Recreation", "Auto"]
              resourcePolicy:
                type: object
                properties:
                  containerPolicies:
                    type: array
                    items:
                      type: object
          status:
            type: object
    additionalPrinterColumns:
    - name: Mode
      type: string
      jsonPath: .spec.updatePolicy.updateMode
    - name: CPU
      type: string
      jsonPath: .status.recommendation.containerRecommendations[0].target.cpu
    - name: Memory
      type: string
      jsonPath: .status.recommendation.containerRecommendations[0].target.memory
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp
---
# VPA for API Gateway
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: api-gateway-vpa
  namespace: pyairtable
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  updatePolicy:
    updateMode: "Off" # Recommendation only, no automatic updates
  resourcePolicy:
    containerPolicies:
    - containerName: api-gateway
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 2000m
        memory: 2Gi
      controlledResources: ["cpu", "memory"]
---
# VPA for Platform Services
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: platform-services-vpa
  namespace: pyairtable
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: platform-services
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: platform-services
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 1Gi
---
# VPA for LLM Orchestrator
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: llm-orchestrator-vpa
  namespace: pyairtable
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: llm-orchestrator
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: llm-orchestrator
      minAllowed:
        cpu: 200m
        memory: 256Mi
      maxAllowed:
        cpu: 2000m
        memory: 4Gi # LLM services can be memory intensive
---
# VPA for Automation Services
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: automation-services-vpa
  namespace: pyairtable
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: automation-services
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: automation-services
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 1Gi
---
# VPA for MCP Server
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: mcp-server-vpa
  namespace: pyairtable
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-server
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: mcp-server
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 1Gi
---
# VPA for Airtable Gateway
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: airtable-gateway-vpa
  namespace: pyairtable
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: airtable-gateway
  updatePolicy:
    updateMode: "Off"
  resourcePolicy:
    containerPolicies:
    - containerName: airtable-gateway
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 500m
        memory: 512Mi