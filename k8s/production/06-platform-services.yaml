# Platform Services Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-services
  namespace: pyairtable-production
  labels:
    app: platform-services
    component: platform
    tier: backend
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: platform-services
  template:
    metadata:
      labels:
        app: platform-services
        component: platform
        tier: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8007"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: pyairtable-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: platform-services
        image: ghcr.io/reg-kris/pyairtable-platform-services:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8007
          name: http
          protocol: TCP
        env:
        # Service Configuration
        - name: PORT
          value: "8007"
        - name: REQUIRE_API_KEY
          value: "true"
        - name: ANALYTICS_RETENTION_DAYS
          value: "90"
        - name: METRICS_BATCH_SIZE
          value: "100"
        envFrom:
        - secretRef:
            name: pyairtable-api-keys
        - secretRef:
            name: pyairtable-app-config
        - secretRef:
            name: pyairtable-database
        - secretRef:
            name: pyairtable-redis
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8007
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8007
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8007
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - platform-services
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: platform-services
  namespace: pyairtable-production
  labels:
    app: platform-services
    component: platform
spec:
  type: ClusterIP
  ports:
  - port: 8007
    targetPort: 8007
    protocol: TCP
    name: http
  selector:
    app: platform-services
---
# HorizontalPodAutoscaler for Platform Services
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: platform-services-hpa
  namespace: pyairtable-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: platform-services
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60