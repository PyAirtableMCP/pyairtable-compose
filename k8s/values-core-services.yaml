# Core services only - minimal deployment for testing
global:
  imageRegistry: ""  # Empty registry for local images
  imagePullPolicy: Never

# Enable only core services
services:
  frontend:
    enabled: false  # Skip frontend for now

  apiGateway:
    enabled: true
    image: pyairtable-api-gateway
    tag: dev
    replicas: 1
    resources:
      limits:
        cpu: 300m
        memory: 384Mi
      requests:
        cpu: 150m
        memory: 192Mi

  llmOrchestrator:
    enabled: false  # Skip for now due to resource constraints

  mcpServer:
    enabled: true
    image: pyairtable-mcp-server
    tag: dev
    replicas: 1
    resources:
      limits:
        cpu: 300m
        memory: 384Mi
      requests:
        cpu: 150m
        memory: 192Mi

  airtableGateway:
    enabled: false  # Skip for now

  platformServices:
    enabled: false  # Skip for now

  automationServices:
    enabled: false  # Skip for now

# PostgreSQL and Redis - essential databases
databases:
  postgres:
    enabled: true
    persistence:
      enabled: true
      size: 1Gi
    resources:
      limits:
        cpu: 300m
        memory: 512Mi
      requests:
        cpu: 150m
        memory: 256Mi

  redis:
    enabled: true
    persistence:
      enabled: true
      size: 512Mi
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi

# Persistent volumes
persistence:
  fileUploads:
    enabled: true
    size: 1Gi

# Application configuration
app:
  environment: development
  logLevel: INFO

# Health checks with lenient settings
healthChecks:
  enabled: true
  initialDelaySeconds: 90
  periodSeconds: 45
  timeoutSeconds: 20
  failureThreshold: 10
  successThreshold: 1

# Disable autoscaling
autoscaling:
  enabled: false

# Disable ingress for core testing
ingress:
  enabled: false