# PostgreSQL Performance Configuration for PyAirtable
# Optimized for MacBook Air M2 with 8-16GB RAM
# Target: <100ms database query times, support for 1000 concurrent users

# Memory Configuration
shared_buffers = 256MB                    # 25% of available RAM (for 1GB dedicated)
effective_cache_size = 1GB                # Estimate of OS cache size
work_mem = 4MB                           # Memory for sorting and hash operations
maintenance_work_mem = 64MB              # Memory for maintenance operations
dynamic_shared_memory_type = posix

# Checkpoint and WAL Configuration
wal_buffers = 16MB                       # WAL buffer size
checkpoint_completion_target = 0.9       # Spread checkpoints over 90% of interval
max_wal_size = 4GB                      # Maximum WAL size before checkpoint
min_wal_size = 1GB                      # Minimum WAL size
checkpoint_timeout = 15min              # Maximum time between checkpoints

# Connection Settings
max_connections = 200                    # Support for high concurrency
superuser_reserved_connections = 3

# Query Planner Configuration
random_page_cost = 1.1                  # Cost of random page access (SSD optimized)
seq_page_cost = 1.0                     # Cost of sequential page access
cpu_tuple_cost = 0.01                   # Cost of processing each tuple
cpu_index_tuple_cost = 0.005            # Cost of processing each index entry
cpu_operator_cost = 0.0025              # Cost of processing each operator
effective_io_concurrency = 200          # Number of concurrent I/O operations (SSD)

# Statistics and Logging
default_statistics_target = 100         # Statistics target for query planner
log_statement = 'none'                  # Don't log statements (performance)
log_duration = off                      # Don't log query durations
log_min_duration_statement = 1000       # Log slow queries (>1s)
log_checkpoints = on                    # Log checkpoint activity
log_connections = off                   # Don't log connections
log_disconnections = off                # Don't log disconnections
log_lock_waits = on                     # Log lock waits
log_temp_files = 10MB                   # Log temp files >10MB

# Autovacuum Configuration (Performance Tuning)
autovacuum = on                         # Enable autovacuum
autovacuum_max_workers = 3              # Number of autovacuum workers
autovacuum_naptime = 1min               # Sleep time between runs
autovacuum_vacuum_threshold = 50        # Minimum number of tuple updates
autovacuum_vacuum_scale_factor = 0.2    # Fraction of table size to add to threshold
autovacuum_analyze_threshold = 50       # Minimum number of tuple changes
autovacuum_analyze_scale_factor = 0.1   # Fraction of table size to add to threshold
autovacuum_vacuum_cost_delay = 20ms     # Cost delay for autovacuum
autovacuum_vacuum_cost_limit = 200      # Cost limit for autovacuum

# Background Writer Configuration
bgwriter_delay = 200ms                  # Background writer sleep time
bgwriter_lru_maxpages = 100             # Maximum pages to write per round
bgwriter_lru_multiplier = 2.0           # Multiplier for next round's target

# Parallel Query Configuration
max_worker_processes = 8                # Maximum background processes
max_parallel_workers_per_gather = 4     # Maximum parallel workers per gather node
max_parallel_workers = 8                # Maximum parallel workers total
max_parallel_maintenance_workers = 4    # Maximum parallel maintenance workers
parallel_tuple_cost = 0.1               # Cost of tuple communication
parallel_setup_cost = 1000.0            # Cost of setting up parallel workers

# Lock Configuration
deadlock_timeout = 1s                   # Time to wait before checking for deadlock
max_locks_per_transaction = 64          # Maximum locks per transaction

# Client Connection Defaults
statement_timeout = 30s                 # Maximum execution time for statements
lock_timeout = 10s                      # Maximum time to wait for locks
idle_in_transaction_session_timeout = 300s  # Kill idle transactions after 5 minutes

# Locale and Character Set
lc_messages = 'en_US.UTF-8'
lc_monetary = 'en_US.UTF-8'
lc_numeric = 'en_US.UTF-8'
lc_time = 'en_US.UTF-8'
default_text_search_config = 'pg_catalog.english'

# Timezone
timezone = 'UTC'

# Error Reporting and Logging
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
log_timezone = 'UTC'

# Replication (for future scaling)
wal_level = replica                     # Level of WAL information
max_wal_senders = 3                     # Maximum WAL senders
wal_keep_segments = 32                  # Minimum WAL segments to keep

# Full Text Search
default_text_search_config = 'pg_catalog.english'

# Performance Extensions (if available)
shared_preload_libraries = 'pg_stat_statements'

# JIT Compilation (PostgreSQL 11+)
jit = on                               # Enable JIT compilation
jit_above_cost = 100000                # JIT cost threshold
jit_inline_above_cost = 500000         # JIT inlining threshold
jit_optimize_above_cost = 500000       # JIT optimization threshold

# Additional Performance Settings
synchronous_commit = on                # Ensure durability
wal_sync_method = fsync               # WAL sync method
full_page_writes = on                 # Write full pages after checkpoint
wal_compression = on                  # Compress WAL records
hot_standby = on                      # Allow read-only queries during recovery

# Memory-specific optimizations for Apple Silicon M2
huge_pages = try                      # Try to use huge pages if available
temp_file_limit = 1GB                # Limit temporary file size

# Index and Table Access Method Optimizations
enable_hashjoin = on
enable_mergejoin = on
enable_nestloop = on
enable_seqscan = on
enable_indexscan = on
enable_indexonlyscan = on
enable_bitmapscan = on
enable_tidscan = on

# Cost-based optimizer settings for SSD storage
seq_page_cost = 1.0
random_page_cost = 1.1
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025

# Geometric type support (if needed)
max_pred_locks_per_transaction = 64
max_pred_locks_per_relation = -2
max_pred_locks_per_page = 2