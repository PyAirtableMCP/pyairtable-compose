{
  "test_start": "2025-08-07T00:57:11.771170",
  "infrastructure": {
    "postgresql": {
      "status": "healthy",
      "details": "/var/run/postgresql:5432 - accepting connections"
    },
    "redis": {
      "status": "healthy",
      "details": "PONG"
    }
  },
  "services": {
    "automation-services-1": {
      "docker_status": "Restarting (1) 10 seconds ago",
      "container_name": "pyairtable-compose-automation-services-1"
    },
    "llm-orchestrator-1": {
      "docker_status": "Up 7 minutes",
      "container_name": "pyairtable-compose-llm-orchestrator-1"
    },
    "mcp-server-1": {
      "docker_status": "Up 7 minutes",
      "container_name": "pyairtable-compose-mcp-server-1"
    },
    "saga-orchestrator-1": {
      "docker_status": "Restarting (3) 1 second ago",
      "container_name": "pyairtable-compose-saga-orchestrator-1"
    },
    "airtable-gateway-1": {
      "docker_status": "Restarting (1) 10 seconds ago",
      "container_name": "pyairtable-compose-airtable-gateway-1"
    },
    "postgres-1": {
      "docker_status": "Up 7 minutes",
      "container_name": "pyairtable-compose-postgres-1"
    },
    "redis-1": {
      "docker_status": "Up 7 minutes",
      "container_name": "pyairtable-compose-redis-1"
    }
  },
  "endpoints": {
    "airtable-gateway": {
      "status": "connection_refused",
      "healthy": false,
      "error": "Service not accepting connections"
    },
    "mcp-server": {
      "status_code": 200,
      "response_time": 0.019104,
      "healthy": true,
      "response": {
        "status": "healthy",
        "service": "mcp-server",
        "timestamp": "2025-08-06T21:57:12.211270"
      }
    },
    "llm-orchestrator": {
      "status_code": 200,
      "response_time": 0.122682,
      "healthy": true,
      "response": {
        "status": "healthy",
        "service": "llm-orchestrator",
        "timestamp": "2025-08-06T21:57:12.317690"
      }
    },
    "automation-services": {
      "status": "connection_refused",
      "healthy": false,
      "error": "Service not accepting connections"
    },
    "saga-orchestrator": {
      "status": "connection_refused",
      "healthy": false,
      "error": "Service not accepting connections"
    }
  },
  "monitoring": {
    "grafana-basic": {
      "status_code": 200,
      "healthy": true,
      "available": true
    },
    "prometheus-basic": {
      "status_code": 200,
      "healthy": true,
      "available": true
    },
    "loki-basic": {
      "status_code": 200,
      "healthy": true,
      "available": true
    }
  },
  "errors": [],
  "summary": {
    "test_completion": "2025-08-07T00:57:12.758028",
    "infrastructure_health": "2/2",
    "endpoints_health": "2/5",
    "monitoring_health": "3/3",
    "overall_status": "PARTIAL",
    "recommendations": []
  },
  "logs": {
    "pyairtable-compose-airtable-gateway-1": {
      "recent_logs": "_import\n  File \"<frozen importlib._bootstrap>\", line 1176, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 1147, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 690, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 940, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\n  File \"/app/src/main.py\", line 36, in <module>\n    from routes import health\nModuleNotFoundError: No module named 'routes'\n",
      "has_errors": true
    },
    "pyairtable-compose-mcp-server-1": {
      "recent_logs": "00 OK\nINFO:     192.168.65.1:58459 - \"POST /tools/list_tables HTTP/1.1\" 404 Not Found\nINFO:     192.168.65.1:58462 - \"GET / HTTP/1.1\" 200 OK\nINFO:     192.168.65.1:58503 - \"GET /docs HTTP/1.1\" 200 OK\nINFO:     192.168.65.1:58504 - \"GET /openapi.json HTTP/1.1\" 200 OK\nINFO:     192.168.65.1:58507 - \"GET /api/v1/mcp/tools HTTP/1.1\" 200 OK\nINFO:     192.168.65.1:58550 - \"POST /api/v1/mcp/tools/list_tables/execute HTTP/1.1\" 400 Bad Request\nINFO:     192.168.65.1:60284 - \"GET /health HTTP/1.1\" 200 OK\n",
      "has_errors": false
    },
    "pyairtable-compose-llm-orchestrator-1": {
      "recent_logs": "Starting llm-orchestrator...\nINFO:     192.168.65.1:32232 - \"GET /health HTTP/1.1\" 200 OK\n",
      "has_errors": true
    },
    "pyairtable-compose-automation-services-1": {
      "recent_logs": "__\n    super().__init__(\n  File \"/usr/local/lib/python3.11/site-packages/pydantic/main.py\", line 164, in __init__\n    __pydantic_self__.__pydantic_validator__.validate_python(data, self_instance=__pydantic_self__)\npydantic_core._pydantic_core.ValidationError: 1 validation error for Settings\nauth_service_url\n  Field required [type=missing, input_value={'log_level': 'DEBUG', 'a...http://mcp-server:8001'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.5/v/missing\n",
      "has_errors": true
    },
    "pyairtable-compose-saga-orchestrator-1": {
      "recent_logs": "packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"postgres\" (172.19.0.3), port 5432 failed: FATAL:  password authentication failed for user \"postgres\"\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\n\nERROR:    Application startup failed. Exiting.\n",
      "has_errors": true
    }
  },
  "database": {
    "connection": {
      "successful": true,
      "version_info": "version                                            \n-----------------------------------------------------------------------------------------------\n PostgreSQL 16.9 on aarch64-unknown-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit\n(1 row)"
    },
    "table_creation": {
      "successful": true,
      "details": "NOTICE:  relation \"test_table\" already exists, skipping"
    }
  }
}