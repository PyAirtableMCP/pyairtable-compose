{
  "type": "record",
  "name": "SagaStartedEvent",
  "namespace": "io.pyairtable.events.saga",
  "doc": "Event emitted when a SAGA transaction starts",
  "fields": [
    {
      "name": "event_id",
      "type": "string",
      "doc": "Unique identifier for this event instance"
    },
    {
      "name": "event_type",
      "type": "string",
      "default": "saga.started",
      "doc": "Type of the event"
    },
    {
      "name": "aggregate_id",
      "type": "string",
      "doc": "SAGA instance ID"
    },
    {
      "name": "aggregate_type",
      "type": "string",
      "default": "Saga",
      "doc": "Type of the aggregate"
    },
    {
      "name": "version",
      "type": "long",
      "doc": "Version of the SAGA aggregate"
    },
    {
      "name": "timestamp",
      "type": "long",
      "logicalType": "timestamp-millis",
      "doc": "When the SAGA started"
    },
    {
      "name": "tenant_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Tenant identifier"
    },
    {
      "name": "correlation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Correlation identifier"
    },
    {
      "name": "causation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Causation identifier"
    },
    {
      "name": "saga_data",
      "type": {
        "type": "record",
        "name": "SagaData",
        "fields": [
          {
            "name": "saga_type",
            "type": "string",
            "doc": "Type of SAGA (e.g., 'UserRegistration', 'WorkflowExecution')"
          },
          {
            "name": "saga_definition",
            "type": "string",
            "doc": "SAGA definition with steps and compensations (JSON string)"
          },
          {
            "name": "input_data",
            "type": ["null", "string"],
            "default": null,
            "doc": "Input data for the SAGA (JSON string)"
          },
          {
            "name": "initiated_by",
            "type": "string",
            "doc": "ID of the user or system that initiated the SAGA"
          },
          {
            "name": "total_steps",
            "type": "int",
            "doc": "Total number of steps in the SAGA"
          },
          {
            "name": "timeout_ms",
            "type": ["null", "long"],
            "default": null,
            "doc": "Timeout for the entire SAGA in milliseconds"
          }
        ]
      },
      "doc": "SAGA start data"
    },
    {
      "name": "metadata",
      "type": {
        "type": "map",
        "values": "string"
      },
      "default": {},
      "doc": "Additional metadata"
    }
  ]
}

{
  "type": "record",
  "name": "SagaStepCompletedEvent",
  "namespace": "io.pyairtable.events.saga",
  "doc": "Event emitted when a SAGA step completes successfully",
  "fields": [
    {
      "name": "event_id",
      "type": "string",
      "doc": "Unique identifier for this event instance"
    },
    {
      "name": "event_type",
      "type": "string",
      "default": "saga.step.completed",
      "doc": "Type of the event"
    },
    {
      "name": "aggregate_id",
      "type": "string",
      "doc": "SAGA instance ID"
    },
    {
      "name": "aggregate_type",
      "type": "string",
      "default": "Saga",
      "doc": "Type of the aggregate"
    },
    {
      "name": "version",
      "type": "long",
      "doc": "Version of the SAGA aggregate"
    },
    {
      "name": "timestamp",
      "type": "long",
      "logicalType": "timestamp-millis",
      "doc": "When the step completed"
    },
    {
      "name": "tenant_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Tenant identifier"
    },
    {
      "name": "correlation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Correlation identifier"
    },
    {
      "name": "causation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Causation identifier"
    },
    {
      "name": "step_data",
      "type": {
        "type": "record",
        "name": "StepData",
        "fields": [
          {
            "name": "step_name",
            "type": "string",
            "doc": "Name of the completed step"
          },
          {
            "name": "step_index",
            "type": "int",
            "doc": "Index of the step in the SAGA (0-based)"
          },
          {
            "name": "step_type",
            "type": "string",
            "doc": "Type of step (command, query, event)"
          },
          {
            "name": "execution_time_ms",
            "type": "long",
            "doc": "Time taken to execute the step in milliseconds"
          },
          {
            "name": "step_input",
            "type": ["null", "string"],
            "default": null,
            "doc": "Input data for the step (JSON string)"
          },
          {
            "name": "step_output",
            "type": ["null", "string"],
            "default": null,
            "doc": "Output data from the step (JSON string)"
          },
          {
            "name": "compensation_data",
            "type": ["null", "string"],
            "default": null,
            "doc": "Data needed for compensation if rollback is required (JSON string)"
          }
        ]
      },
      "doc": "SAGA step completion data"
    },
    {
      "name": "metadata",
      "type": {
        "type": "map",
        "values": "string"
      },
      "default": {},
      "doc": "Additional metadata"
    }
  ]
}

{
  "type": "record",
  "name": "SagaCompletedEvent",
  "namespace": "io.pyairtable.events.saga",
  "doc": "Event emitted when a SAGA transaction completes successfully",
  "fields": [
    {
      "name": "event_id",
      "type": "string",
      "doc": "Unique identifier for this event instance"
    },
    {
      "name": "event_type",
      "type": "string",
      "default": "saga.completed",
      "doc": "Type of the event"
    },
    {
      "name": "aggregate_id",
      "type": "string",
      "doc": "SAGA instance ID"
    },
    {
      "name": "aggregate_type",
      "type": "string",
      "default": "Saga",
      "doc": "Type of the aggregate"
    },
    {
      "name": "version",
      "type": "long",
      "doc": "Version of the SAGA aggregate"
    },
    {
      "name": "timestamp",
      "type": "long",
      "logicalType": "timestamp-millis",
      "doc": "When the SAGA completed"
    },
    {
      "name": "tenant_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Tenant identifier"
    },
    {
      "name": "correlation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Correlation identifier"
    },
    {
      "name": "causation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Causation identifier"
    },
    {
      "name": "completion_data",
      "type": {
        "type": "record",
        "name": "SagaCompletionData",
        "fields": [
          {
            "name": "saga_type",
            "type": "string",
            "doc": "Type of SAGA that completed"
          },
          {
            "name": "total_execution_time_ms",
            "type": "long",
            "doc": "Total time taken for the entire SAGA in milliseconds"
          },
          {
            "name": "steps_completed",
            "type": "int",
            "doc": "Number of steps completed successfully"
          },
          {
            "name": "final_output",
            "type": ["null", "string"],
            "default": null,
            "doc": "Final output data from the SAGA (JSON string)"
          },
          {
            "name": "business_outcome",
            "type": ["null", "string"],
            "default": null,
            "doc": "Description of the business outcome achieved"
          }
        ]
      },
      "doc": "SAGA completion data"
    },
    {
      "name": "metadata",
      "type": {
        "type": "map",
        "values": "string"
      },
      "default": {},
      "doc": "Additional metadata"
    }
  ]
}

{
  "type": "record",
  "name": "SagaFailedEvent",
  "namespace": "io.pyairtable.events.saga",
  "doc": "Event emitted when a SAGA transaction fails and rollback is initiated",
  "fields": [
    {
      "name": "event_id",
      "type": "string",
      "doc": "Unique identifier for this event instance"
    },
    {
      "name": "event_type",
      "type": "string",
      "default": "saga.failed",
      "doc": "Type of the event"
    },
    {
      "name": "aggregate_id",
      "type": "string",
      "doc": "SAGA instance ID"
    },
    {
      "name": "aggregate_type",
      "type": "string",
      "default": "Saga",
      "doc": "Type of the aggregate"
    },
    {
      "name": "version",
      "type": "long",
      "doc": "Version of the SAGA aggregate"
    },
    {
      "name": "timestamp",
      "type": "long",
      "logicalType": "timestamp-millis",
      "doc": "When the SAGA failed"
    },
    {
      "name": "tenant_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Tenant identifier"
    },
    {
      "name": "correlation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Correlation identifier"
    },
    {
      "name": "causation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Causation identifier"
    },
    {
      "name": "failure_data",
      "type": {
        "type": "record",
        "name": "SagaFailureData",
        "fields": [
          {
            "name": "saga_type",
            "type": "string",
            "doc": "Type of SAGA that failed"
          },
          {
            "name": "failed_step_name",
            "type": "string",
            "doc": "Name of the step that failed"
          },
          {
            "name": "failed_step_index",
            "type": "int",
            "doc": "Index of the step that failed (0-based)"
          },
          {
            "name": "failure_reason",
            "type": "string",
            "doc": "Reason for the failure"
          },
          {
            "name": "error_code",
            "type": ["null", "string"],
            "default": null,
            "doc": "Error code if available"
          },
          {
            "name": "error_details",
            "type": ["null", "string"],
            "default": null,
            "doc": "Detailed error information (JSON string)"
          },
          {
            "name": "steps_to_compensate",
            "type": "int",
            "doc": "Number of steps that need to be compensated"
          },
          {
            "name": "compensation_started",
            "type": "boolean",
            "default": false,
            "doc": "Whether compensation has been initiated"
          }
        ]
      },
      "doc": "SAGA failure data"
    },
    {
      "name": "metadata",
      "type": {
        "type": "map",
        "values": "string"
      },
      "default": {},
      "doc": "Additional metadata"
    }
  ]
}

{
  "type": "record",
  "name": "SagaCompensatedEvent",
  "namespace": "io.pyairtable.events.saga",
  "doc": "Event emitted when a SAGA transaction has been fully compensated/rolled back",
  "fields": [
    {
      "name": "event_id",
      "type": "string",
      "doc": "Unique identifier for this event instance"
    },
    {
      "name": "event_type",
      "type": "string",
      "default": "saga.compensated",
      "doc": "Type of the event"
    },
    {
      "name": "aggregate_id",
      "type": "string",
      "doc": "SAGA instance ID"
    },
    {
      "name": "aggregate_type",
      "type": "string",
      "default": "Saga",
      "doc": "Type of the aggregate"
    },
    {
      "name": "version",
      "type": "long",
      "doc": "Version of the SAGA aggregate"
    },
    {
      "name": "timestamp",
      "type": "long",
      "logicalType": "timestamp-millis",
      "doc": "When the compensation completed"
    },
    {
      "name": "tenant_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Tenant identifier"
    },
    {
      "name": "correlation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Correlation identifier"
    },
    {
      "name": "causation_id",
      "type": ["null", "string"],
      "default": null,
      "doc": "Causation identifier"
    },
    {
      "name": "compensation_data",
      "type": {
        "type": "record",
        "name": "CompensationData",
        "fields": [
          {
            "name": "saga_type",
            "type": "string",
            "doc": "Type of SAGA that was compensated"
          },
          {
            "name": "steps_compensated",
            "type": "int",
            "doc": "Number of steps that were compensated"
          },
          {
            "name": "compensation_time_ms",
            "type": "long",
            "doc": "Total time taken for compensation in milliseconds"
          },
          {
            "name": "compensation_successful",
            "type": "boolean",
            "doc": "Whether all compensations were successful"
          },
          {
            "name": "failed_compensations",
            "type": {
              "type": "array",
              "items": "string"
            },
            "default": [],
            "doc": "List of compensations that failed"
          },
          {
            "name": "final_state",
            "type": "string",
            "doc": "Final state after compensation (fully_compensated, partially_compensated, compensation_failed)"
          }
        ]
      },
      "doc": "SAGA compensation data"
    },
    {
      "name": "metadata",
      "type": {
        "type": "map",
        "values": "string"
      },
      "default": {},
      "doc": "Additional metadata"
    }
  ]
}