apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-orchestrator
  namespace: pyairtable-customer
  labels:
    app.kubernetes.io/name: llm-orchestrator
    app.kubernetes.io/component: llm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: llm-orchestrator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: llm-orchestrator
        app.kubernetes.io/component: llm
    spec:
      containers:
      - name: llm-orchestrator
        image: ghcr.io/reg-kris/llm-orchestrator-py:latest
        ports:
        - containerPort: 8003
        env:
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: pyairtable-secrets
              key: GEMINI_API_KEY
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pyairtable-secrets
              key: REDIS_PASSWORD
        - name: THINKING_BUDGET
          valueFrom:
            secretKeyRef:
              name: pyairtable-secrets
              key: THINKING_BUDGET
        envFrom:
        - configMapRef:
            name: pyairtable-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: llm-orchestrator-service
  namespace: pyairtable-customer
  labels:
    app.kubernetes.io/name: llm-orchestrator
    app.kubernetes.io/component: llm
spec:
  selector:
    app.kubernetes.io/name: llm-orchestrator
  ports:
  - port: 8003
    targetPort: 8003
    protocol: TCP
  type: ClusterIP