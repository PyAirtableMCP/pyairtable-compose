# =============================================================================
# PyAirtable Compose - Master Environment Template
# =============================================================================
# CRITICAL: This template shows all required environment variables
# Copy to .env and fill in your actual credentials
#
# SECURITY WARNING: Never commit actual credentials to version control
# =============================================================================

# =============================================================================
# EXTERNAL API CREDENTIALS (REQUIRED - REPLACE WITH YOUR ACTUAL CREDENTIALS)
# =============================================================================

# Airtable Configuration
# Get your Personal Access Token from: https://airtable.com/developers/web/api/authentication
AIRTABLE_TOKEN=your_actual_airtable_token_here
AIRTABLE_PAT=your_actual_airtable_token_here  # Alias for compatibility
# Get your Base ID from your Airtable base URL or API documentation
AIRTABLE_BASE=your_actual_base_id_here

# Google Gemini API Key
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_actual_gemini_api_key_here

# OpenAI API Key (optional - for future LLM support)
OPENAI_API_KEY=your_actual_openai_api_key_here

# =============================================================================
# SECURE GENERATED SECRETS (AUTOMATICALLY GENERATED - DO NOT MODIFY MANUALLY)
# =============================================================================

# Internal API Key for service-to-service communication
# Generate with: openssl rand -hex 32
API_KEY=generate_secure_api_key_here

# JWT Secret for token signing (base64 encoded)
# Generate with: openssl rand -base64 32
JWT_SECRET=generate_secure_jwt_secret_here
JWT_ALGORITHM=HS256
JWT_EXPIRES_IN=24h

# NextAuth Secret for authentication
# Generate with: openssl rand -hex 32
NEXTAUTH_SECRET=generate_secure_nextauth_secret_here
NEXTAUTH_URL=http://localhost:3000

# Database passwords (generate securely)
# Generate with: openssl rand -base64 16
POSTGRES_PASSWORD=generate_secure_postgres_password_here
REDIS_PASSWORD=generate_secure_redis_password_here

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================

# Environment (development|staging|production)
ENVIRONMENT=development
LOG_LEVEL=DEBUG
NODE_ENV=development

# Database configuration
POSTGRES_DB=pyairtable
POSTGRES_USER=postgres

# Application settings
THINKING_BUDGET=50000
MAX_FILE_SIZE=10MB
ALLOWED_EXTENSIONS=pdf,doc,docx,txt,csv,xlsx,json,yaml

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://localhost:8080
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-API-Key
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400

# Development features
ENABLE_DEBUG=true
ENABLE_METRICS=true
SHOW_COST_TRACKING=true

# Security settings
REQUIRE_API_KEY=true
REQUIRE_HTTPS=false

# =============================================================================
# SERVICE URLs (INTERNAL DOCKER NETWORKING - USE CONTAINER NAMES)
# =============================================================================

# Core Service URLs (internal networking)
AIRTABLE_GATEWAY_URL=http://airtable-gateway:8002
MCP_SERVER_URL=http://mcp-server:8001
LLM_ORCHESTRATOR_URL=http://llm-orchestrator:8003
API_GATEWAY_URL=http://api-gateway:8000
FRONTEND_URL=http://frontend:3000

# Platform Services
PLATFORM_SERVICES_URL=http://platform-services:8007
AUTOMATION_SERVICES_URL=http://automation-services:8006
SAGA_ORCHESTRATOR_URL=http://saga-orchestrator:8008

# Service-specific URLs
AUTH_SERVICE_URL=http://platform-services:8007
USER_SERVICE_URL=http://platform-services:8007
PERMISSION_SERVICE_URL=http://platform-services:8007
NOTIFICATION_SERVICE_URL=http://automation-services:8006
WEBHOOK_SERVICE_URL=http://automation-services:8006
DATA_SYNC_SERVICE_URL=http://automation-services:8006
SCHEMA_SERVICE_URL=http://platform-services:8007
AIRTABLE_CONNECTOR_URL=http://airtable-gateway:8002

# External URLs (for frontend)
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_API_GATEWAY_URL=http://localhost:8000
NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws

# =============================================================================
# DATABASE CONNECTION STRINGS (INTERNAL NETWORKING)
# =============================================================================

# PostgreSQL (use container name 'postgres' for internal networking)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}

# Redis (use container name 'redis' for internal networking)
REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
REDIS_URL_NO_AUTH=redis://redis:6379

# =============================================================================
# SERVICE-SPECIFIC CONFIGURATION
# =============================================================================

# Airtable Gateway
AIRTABLE_RATE_LIMIT=5
AIRTABLE_TIMEOUT=30
CACHE_TTL=3600

# MCP Server
MCP_SERVER_MODE=http
MCP_SERVER_PORT=8001
MCP_SERVER_HTTP_URL=http://mcp-server:8001
USE_HTTP_MCP=true

# LLM Orchestrator
USE_REDIS_SESSIONS=true
MCP_SERVER_STDIO_COMMAND=python -m src.server
MCP_SERVER_WORKING_DIR=/app/mcp-server

# Platform Services
PASSWORD_MIN_LENGTH=8
PASSWORD_HASH_ROUNDS=12
ANALYTICS_RETENTION_DAYS=90
METRICS_BATCH_SIZE=100

# Automation Services
DEFAULT_WORKFLOW_TIMEOUT=300
MAX_WORKFLOW_RETRIES=3
SCHEDULER_CHECK_INTERVAL=30
UPLOAD_DIR=/tmp/uploads

# SAGA Orchestrator
SAGA_TIMEOUT_SECONDS=3600
SAGA_RETRY_ATTEMPTS=3
SAGA_STEP_TIMEOUT_SECONDS=300
USE_REDIS_EVENT_BUS=true

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Metrics
METRICS_PORT=9090
ENABLE_METRICS=true

# Sentry Configuration (optional)
NEXT_PUBLIC_SENTRY_DSN=https://your_sentry_dsn_here@sentry.io/project_id
NEXT_PUBLIC_APP_ENV=development
NEXT_PUBLIC_APP_VERSION=1.0.0
SENTRY_ENVIRONMENT=development

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# =============================================================================
# DOCKER NETWORKING
# =============================================================================

# Network Configuration
COMPOSE_PROJECT_NAME=pyairtable
DOCKER_NETWORK=pyairtable-network

# Volume Configuration
POSTGRES_DATA_PATH=./data/postgres
REDIS_DATA_PATH=./data/redis
UPLOADS_PATH=./data/uploads

# =============================================================================
# DEVELOPMENT FLAGS
# =============================================================================

# Feature Flags
NEXT_PUBLIC_ENABLE_DEBUG=false
NEXT_PUBLIC_SHOW_COST_TRACKING=true

# Development Tools
HOT_RELOAD=true
WATCH_MODE=true

# =============================================================================
# RATE LIMITING
# =============================================================================

RATE_LIMIT_PER_MINUTE=100
API_RATE_LIMIT=1000
BURST_RATE_LIMIT=50

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================

# SSL Configuration (for production)
SSL_CERT_PATH=/etc/ssl/certs
SSL_KEY_PATH=/etc/ssl/private
SSL_ENABLED=false

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=7

# =============================================================================
# LOGGING
# =============================================================================

# Log Configuration
LOG_FORMAT=json
LOG_FILE=/var/log/pyairtable.log
LOG_ROTATION=daily
LOG_MAX_SIZE=100MB

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Connection Pool Settings
DB_MAX_CONNECTIONS=20
DB_MIN_CONNECTIONS=5
REDIS_MAX_CONNECTIONS=10

# Timeout Settings
HTTP_TIMEOUT=30s
DB_TIMEOUT=10s
REDIS_TIMEOUT=5s