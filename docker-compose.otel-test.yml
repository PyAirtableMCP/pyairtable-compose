version: '3.8'

# Docker Compose configuration for testing OpenTelemetry integration
# with PyAirtable services and the LGTM stack

services:
  # ============================================================================
  # Python Services with OpenTelemetry
  # ============================================================================
  
  llm-orchestrator:
    build: 
      context: ./python-services/llm-orchestrator
      dockerfile: Dockerfile
    container_name: llm-orchestrator-otel
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
      - ENVIRONMENT=development
      - SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4318
      - OTEL_SAMPLING_RATIO=1.0
      - OTEL_DEBUG=true
      - LOG_LEVEL=INFO
      - LOKI_ENDPOINT=http://loki:3100
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your-api-key}
      - DATABASE_URL=postgresql://admin:changeme@postgres:5432/pyairtable
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - otel-collector
    networks:
      - pyairtable-otel
    volumes:
      - ./python-services/shared:/app/shared:ro

  airtable-gateway:
    build:
      context: ./python-services/airtable-gateway
      dockerfile: Dockerfile
    container_name: airtable-gateway-otel
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - ENVIRONMENT=development
      - SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4318
      - OTEL_SAMPLING_RATIO=1.0
      - OTEL_DEBUG=true
      - LOG_LEVEL=INFO
      - LOKI_ENDPOINT=http://loki:3100
      - DATABASE_URL=postgresql://admin:changeme@postgres:5432/pyairtable
      - REDIS_URL=redis://redis:6379/0
      - INTERNAL_API_KEY=test-internal-key
    depends_on:
      - postgres
      - redis
      - otel-collector
    networks:
      - pyairtable-otel
    volumes:
      - ./python-services/shared:/app/shared:ro

  mcp-server:
    build:
      context: ./python-services/mcp-server
      dockerfile: Dockerfile  
    container_name: mcp-server-otel
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - ENVIRONMENT=development
      - SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4318
      - OTEL_SAMPLING_RATIO=1.0
      - OTEL_DEBUG=true
      - LOG_LEVEL=INFO
      - LOKI_ENDPOINT=http://loki:3100
      - DATABASE_URL=postgresql://admin:changeme@postgres:5432/pyairtable
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - otel-collector
    networks:
      - pyairtable-otel
    volumes:
      - ./python-services/shared:/app/shared:ro

  automation-services:
    build:
      context: ./pyairtable-automation-services
      dockerfile: Dockerfile
    container_name: automation-services-otel
    ports:
      - "8006:8006"
    environment:
      - PORT=8006
      - ENVIRONMENT=development
      - SERVICE_VERSION=1.0.0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://otel-collector:4318
      - OTEL_SAMPLING_RATIO=1.0
      - OTEL_DEBUG=true 
      - LOG_LEVEL=INFO
      - LOKI_ENDPOINT=http://loki:3100
      - DATABASE_URL=postgresql://admin:changeme@postgres:5432/pyairtable
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - otel-collector
    networks:
      - pyairtable-otel
    volumes:
      - ./python-services/shared:/app/shared:ro

  # ============================================================================
  # Infrastructure Services
  # ============================================================================

  postgres:
    image: postgres:15-alpine
    container_name: postgres-otel
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_DB=pyairtable
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pyairtable-otel

  redis:
    image: redis:7-alpine
    container_name: redis-otel
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pyairtable-otel

  # ============================================================================
  # LGTM Stack (Loki, Grafana, Tempo, Mimir)
  # ============================================================================

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./monitoring/lgtm-stack/otel/otel-collector-config.yml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver  
      - "8888:8888"   # Prometheus metrics
      - "13133:13133" # Health check
    depends_on:
      - tempo
      - loki
      - mimir
    networks:
      - pyairtable-otel

  tempo:
    image: grafana/tempo:2.3.1
    container_name: tempo-otel
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./monitoring/lgtm-stack/tempo/tempo-config.yml:/etc/tempo.yaml:ro
      - tempo_data:/var/tempo
    ports:
      - "3200:3200"   # HTTP
      - "9095:9095"   # gRPC
    networks:
      - pyairtable-otel

  loki:
    image: grafana/loki:2.9.4
    container_name: loki-otel
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/lgtm-stack/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - pyairtable-otel

  mimir:
    image: grafana/mimir:2.10.5  
    container_name: mimir-otel
    command: ["-config.file=/etc/mimir.yaml"]
    volumes:
      - ./monitoring/lgtm-stack/mimir/mimir-config.yml:/etc/mimir.yaml:ro
      - mimir_data:/data
    ports:
      - "9009:9009"
    networks:
      - pyairtable-otel

  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana-otel
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    volumes:
      - ./monitoring/lgtm-stack/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/lgtm-stack/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - tempo
      - loki
      - mimir
    networks:
      - pyairtable-otel

  # ============================================================================
  # Additional Tools
  # ============================================================================

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail-otel
    volumes:
      - ./monitoring/lgtm-stack/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - pyairtable-otel

  # Load balancer for testing
  nginx:
    image: nginx:alpine
    container_name: nginx-otel
    volumes:
      - ./nginx/nginx-otel.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - llm-orchestrator
      - airtable-gateway
      - mcp-server
      - automation-services
    networks:
      - pyairtable-otel

volumes:
  postgres_data:
  redis_data:
  tempo_data:
  loki_data:
  mimir_data:
  grafana_data:

networks:
  pyairtable-otel:
    driver: bridge
    name: pyairtable-otel