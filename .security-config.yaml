# =============================================================================
# PyAirtable Security Configuration
# =============================================================================
# This file defines security policies and patterns for credential detection
# Used by pre-commit hooks and security scanning tools

security:
  version: "1.0"
  last_updated: "2025-08-10"
  
  # OWASP Top 10 2021 Coverage
  owasp_coverage:
    - "A01:2021 – Broken Access Control"
    - "A02:2021 – Cryptographic Failures" 
    - "A03:2021 – Injection"
    - "A05:2021 – Security Misconfiguration"
    - "A07:2021 – Identification and Authentication Failures"
    - "A08:2021 – Software and Data Integrity Failures"
    - "A09:2021 – Security Logging and Monitoring Failures"

# Credential Detection Patterns
credential_patterns:
  high_confidence:
    - name: "Airtable Personal Access Token"
      pattern: "pat[a-zA-Z0-9_-]+\\.[a-zA-Z0-9_-]+"
      severity: "CRITICAL"
      description: "Airtable Personal Access Token with full API access"
      
    - name: "Google/Gemini API Key"  
      pattern: "AIza[a-zA-Z0-9_-]{35}"
      severity: "CRITICAL"
      description: "Google API key (including Gemini AI services)"
      
    - name: "OpenAI API Key"
      pattern: "sk-[a-zA-Z0-9]{48}"
      severity: "CRITICAL"
      description: "OpenAI API key for GPT and other services"
      
    - name: "GitHub Personal Access Token"
      pattern: "ghp_[a-zA-Z0-9]{36}"
      severity: "HIGH"
      description: "GitHub personal access token"
      
    - name: "AWS Access Key"
      pattern: "AKIA[0-9A-Z]{16}"
      severity: "CRITICAL"
      description: "AWS Access Key ID"
      
    - name: "JWT Token"
      pattern: "eyJ[a-zA-Z0-9_-]*\\.eyJ[a-zA-Z0-9_-]*\\.[a-zA-Z0-9_-]*"
      severity: "HIGH"
      description: "JSON Web Token (may contain sensitive claims)"
      
    - name: "Private Key"
      pattern: "-----BEGIN.*PRIVATE KEY-----"
      severity: "CRITICAL"
      description: "Private cryptographic key"

  medium_confidence:
    - name: "Database Connection String"
      pattern: "(postgres|mysql|mongodb)://[^:]+:[^@]+@"
      severity: "HIGH"
      description: "Database connection string with embedded credentials"
      
    - name: "API Key Assignment"
      pattern: "api[_-]?key['\"]?\\s*[:=]\\s*['\"][a-zA-Z0-9_-]{16,}['\"]"
      severity: "MEDIUM"
      description: "API key variable assignment"
      
    - name: "Password Assignment"  
      pattern: "password['\"]?\\s*[:=]\\s*['\"][^'\"]{8,}['\"]"
      severity: "MEDIUM"
      description: "Password variable assignment"

# File Exclusions (files that should not be scanned)
exclusions:
  file_patterns:
    - "*.md"
    - "*.txt"  
    - "*.example"
    - "*.template"
    - "*.sample"
    - "**/test/**"
    - "**/tests/**" 
    - "**/spec/**"
    - "**/docs/**"
    - "*.test.*"
    - "*.spec.*"
    - ".gitignore"
    - "LICENSE*"
    - "README*"
    - "CHANGELOG*"
    
  directories:
    - "node_modules/"
    - ".git/"
    - ".vscode/"
    - ".idea/"
    - "build/"
    - "dist/"
    - "coverage/"
    - "logs/"

# Security Headers (for web applications)
security_headers:
  required:
    - "CSP: default-src 'self'"
    - "X-Content-Type-Options: nosniff"
    - "X-Frame-Options: DENY" 
    - "X-XSS-Protection: 1; mode=block"
    - "HSTS: max-age=31536000"
    - "Referrer-Policy: strict-origin-when-cross-origin"
    
  recommended:
    - "Permissions-Policy"
    - "Cross-Origin-Opener-Policy: same-origin"
    - "Cross-Origin-Resource-Policy: cross-origin"

# Authentication Security Requirements
authentication:
  password_policy:
    min_length: 12
    require_uppercase: true
    require_lowercase: true
    require_numbers: true
    require_special_chars: true
    hash_algorithm: "bcrypt"
    hash_rounds: 14
    
  jwt_security:
    algorithm: "HS256"
    min_secret_length: 32
    max_expiration: "24h"
    require_https: true
    
  session_security:
    secure_cookies: true
    httponly_cookies: true
    samesite: "strict"
    timeout: "1h"

# Encryption Standards
encryption:
  at_rest:
    algorithm: "AES-256-GCM"
    key_rotation: "monthly"
    
  in_transit:
    tls_version: "1.3"
    cipher_suites:
      - "TLS_AES_256_GCM_SHA384"
      - "TLS_CHACHA20_POLY1305_SHA256"
    
# Secrets Management
secrets_management:
  development:
    method: "environment_variables"
    storage: "local_encrypted"
    rotation: "manual"
    
  staging:
    method: "secrets_manager"
    storage: "aws_secrets_manager"  
    rotation: "weekly"
    
  production:
    method: "secrets_manager"
    storage: "aws_secrets_manager"
    rotation: "weekly"
    encryption: "customer_managed_keys"
    audit_logging: true

# Monitoring and Alerting
monitoring:
  log_events:
    - "authentication_failures"
    - "authorization_failures" 
    - "credential_access_attempts"
    - "configuration_changes"
    - "privilege_escalations"
    
  alert_thresholds:
    failed_logins: 5
    api_rate_limit_exceeded: 100
    suspicious_ip_activity: true
    
# Compliance Requirements
compliance:
  standards:
    - "OWASP Top 10 2021"
    - "NIST Cybersecurity Framework"
    - "ISO 27001"
    
  requirements:
    - "Regular security assessments"
    - "Vulnerability scanning"
    - "Penetration testing (annual)"
    - "Security awareness training"
    - "Incident response plan"

# Contact Information
security_contact:
  team: "Security Team"
  email: "security@example.com"
  escalation: "security-urgent@example.com"
  incident_response: "incident-response@example.com"