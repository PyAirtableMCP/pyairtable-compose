version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: pyairtable_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./go-services/migrations/auth:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pyairtable_auth"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./go-services/auth-service
      dockerfile: Dockerfile
    ports:
      - "8005:8001"
    environment:
      - PORT=8001
      - ENVIRONMENT=development
      - DATABASE_URL=postgres://postgres:password@postgres:5432/pyairtable_auth?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=test-secret-key-for-development-only
      - CORS_ORIGINS=*
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  default:
    name: pyairtable-auth-test