# Envoy Configuration for Istio Development Simulation
# Simulates Istio sidecar proxy behavior for local development

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # Main application traffic listener
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              # Health check routes
              - match:
                  prefix: "/health"
                route:
                  cluster: api_gateway_cluster
                timeout: 5s
              # Auth routes
              - match:
                  prefix: "/api/v1/auth"
                route:
                  cluster: auth_service_cluster
                timeout: 30s
                retry_policy:
                  retry_on: 5xx,gateway-error,connect-failure,refused-stream
                  num_retries: 3
              # User routes
              - match:
                  prefix: "/api/v1/users"
                route:
                  cluster: user_service_cluster
                timeout: 30s
              # Airtable routes
              - match:
                  prefix: "/api/v1/airtable"
                route:
                  cluster: airtable_gateway_cluster
                timeout: 60s
              # LLM routes
              - match:
                  prefix: "/api/v1/llm"
                route:
                  cluster: llm_orchestrator_cluster
                timeout: 120s
              - match:
                  prefix: "/api/v1/chat"
                route:
                  cluster: llm_orchestrator_cluster
                timeout: 120s
              # Default route
              - match:
                  prefix: "/"
                route:
                  cluster: api_gateway_cluster
                timeout: 30s
          http_filters:
          # WASM filter for custom headers (simulated)
          - name: envoy.filters.http.wasm
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
              config:
                name: istio_headers
                root_id: istio_headers
                vm_config:
                  vm_id: istio_headers
                  runtime: envoy.wasm.runtime.null
                  code:
                    local:
                      inline_string: |
                        const HEADERS = {
                          'x-request-id': () => Math.random().toString(36).substring(7),
                          'x-forwarded-proto': 'http',
                          'x-istio-proxy': 'envoy-dev'
                        };
          # JWT Authentication filter
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                pyairtable_auth:
                  issuer: pyairtable-auth
                  audiences:
                  - pyairtable-api
                  remote_jwks:
                    http_uri:
                      uri: http://auth-service:8001/.well-known/jwks.json
                      cluster: auth_service_cluster
                      timeout: 5s
                    cache_duration: 300s
              rules:
              - match:
                  prefix: /api/v1/
                requires:
                  provider_name: pyairtable_auth
          # Rate limiting filter
          - name: envoy.filters.http.local_ratelimit
            typed_config:
              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
              type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
              value:
                stat_prefix: local_rate_limiter
                token_bucket:
                  max_tokens: 1000
                  tokens_per_fill: 100
                  fill_interval: 60s
                filter_enabled:
                  runtime_key: local_rate_limit_enabled
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
                filter_enforced:
                  runtime_key: local_rate_limit_enforced
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
          # Router filter (must be last)
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              format: |
                [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                tenant_id="%REQ(X-TENANT-ID)%" user_id="%REQ(X-USER-ID)%"

  clusters:
  # API Gateway cluster
  - name: api_gateway_cluster
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: api_gateway_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api-gateway
                port_value: 8080
    health_checks:
    - timeout: 5s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: /health
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 100
        max_pending_requests: 50
        max_requests: 200
        max_retries: 3
    outlier_detection:
      consecutive_5xx: 3
      consecutive_gateway_failure: 3
      interval: 30s
      base_ejection_time: 30s
      max_ejection_percent: 50

  # Auth Service cluster
  - name: auth_service_cluster
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: auth_service_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth-service
                port_value: 8001
    health_checks:
    - timeout: 5s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: /health

  # User Service cluster
  - name: user_service_cluster
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: user_service_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: user-service
                port_value: 8002

  # Airtable Gateway cluster
  - name: airtable_gateway_cluster
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    lb_policy: LEAST_REQUEST
    load_assignment:
      cluster_name: airtable_gateway_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: airtable-gateway
                port_value: 8002
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 30
        max_pending_requests: 15
        max_requests: 100
        max_retries: 3
    outlier_detection:
      consecutive_5xx: 5
      consecutive_gateway_failure: 5
      interval: 30s
      base_ejection_time: 60s

  # LLM Orchestrator cluster
  - name: llm_orchestrator_cluster
    connect_timeout: 0.5s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: llm_orchestrator_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: llm-orchestrator
                port_value: 8003
    circuit_breakers:
      thresholds:
      - priority: DEFAULT
        max_connections: 20
        max_pending_requests: 10
        max_requests: 50
        max_retries: 2
    outlier_detection:
      consecutive_5xx: 3
      consecutive_gateway_failure: 3
      interval: 60s
      base_ejection_time: 120s

# Runtime configuration
layered_runtime:
  layers:
  - name: static_layer_0
    static_layer:
      envoy:
        resource_limits:
          listener:
            example_listener_name:
              connection_limit: 10000
      overload:
        global_downstream_max_connections: 50000