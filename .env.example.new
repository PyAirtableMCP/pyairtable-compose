# PyAirtable Environment Configuration
# Generated: Sun Aug 10 21:44:09 EEST 2025
# IMPORTANT: Keep this file secure and never commit to version control

# Database Configuration
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=pyairtable
POSTGRES_USER=pyairtable
POSTGRES_PASSWORD=YOUR_SECURE_POSTGRES_PASSWORD_HERE

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=YOUR_SECURE_REDIS_PASSWORD_HERE

# Authentication - Enhanced JWT Security
JWT_SECRET="YOUR_SECURE_JWT_SECRET_HERE_256_BITS_BASE64"
JWT_REFRESH_SECRET="YOUR_SECURE_JWT_REFRESH_SECRET_HERE_256_BITS_BASE64"
JWT_ACCESS_TOKEN_EXPIRATION=900
JWT_REFRESH_TOKEN_EXPIRATION=604800
SESSION_SECRET=YOUR_SECURE_SESSION_SECRET_HERE
API_KEY=YOUR_SECURE_API_KEY_HERE

# JWT Security Configuration
JWT_ALGORITHM=HS256
JWT_ISSUER=pyairtable-platform
JWT_AUDIENCE=pyairtable-api
JWT_LEEWAY=30

# Token Rotation Policy
JWT_ROTATION_ENABLED=true
JWT_ROTATION_THRESHOLD=300
JWT_BLACKLIST_ENABLED=true

# Airtable Integration
# IMPORTANT: Replace these with your actual Airtable credentials
AIRTABLE_TOKEN=YOUR_AIRTABLE_PERSONAL_ACCESS_TOKEN_HERE
AIRTABLE_BASE=YOUR_AIRTABLE_BASE_ID_HERE

# AI Services (add your actual API keys)
# OPENAI_API_KEY=sk-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# ANTHROPIC_API_KEY=sk-ant-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
GEMINI_API_KEY=YOUR_GOOGLE_GEMINI_API_KEY_HERE

# Service URLs (for docker-compose networking) - Fixed to match actual services
API_GATEWAY_URL=http://api-gateway:8000
AIRTABLE_GATEWAY_URL=http://airtable-gateway:8002
MCP_SERVER_URL=http://mcp-server:8001
LLM_ORCHESTRATOR_URL=http://llm-orchestrator:8003
PLATFORM_SERVICES_URL=http://platform-services:8007
AUTOMATION_SERVICES_URL=http://automation-services:8006
SAGA_ORCHESTRATOR_URL=http://saga-orchestrator:8008

# Frontend Configuration - Fixed to match actual services
NEXT_PUBLIC_API_URL=http://localhost:8000
NEXT_PUBLIC_AUTH_URL=http://localhost:8007

# Environment
ENVIRONMENT=development
LOG_LEVEL=INFO
DEBUG=false

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_RPM=60
RATE_LIMIT_RPH=1000

# Security Configuration
# CORS_ORIGINS - using docker-compose fallback
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400
HTTPS_ENABLED=false
SECURE_COOKIES=false

# NextAuth Configuration
NEXTAUTH_SECRET=YOUR_SECURE_NEXTAUTH_SECRET_HERE

# Service Configuration Flags
REQUIRE_API_KEY=true
NODE_ENV=development
ENABLE_DEBUG=false
SHOW_COST_TRACKING=true
ENABLE_METRICS=true

# Database URL (full connection string)
DATABASE_URL=postgresql://pyairtable:YyeLlj9TN35HMVVPkjNIubPBm2gH06rD@postgres:5432/pyairtable

# Redis URL (full connection string)  
REDIS_URL=redis://:lqm5n0vctfHu2QeHhMefwVmELHMnXsJI@redis:6379

# Missing service configuration
MAX_FILE_SIZE=10MB
# ALLOWED_EXTENSIONS - using docker-compose fallback
UPLOAD_DIR=/tmp/uploads
DEFAULT_WORKFLOW_TIMEOUT=300
MAX_WORKFLOW_RETRIES=3
SCHEDULER_CHECK_INTERVAL=30
SAGA_TIMEOUT_SECONDS=3600
SAGA_RETRY_ATTEMPTS=3
SAGA_STEP_TIMEOUT_SECONDS=300
METRICS_PORT=9090
PASSWORD_MIN_LENGTH=8
PASSWORD_HASH_ROUNDS=12
ANALYTICS_RETENTION_DAYS=90
METRICS_BATCH_SIZE=100

# LLM Configuration
THINKING_BUDGET=10000

# SSL/TLS Configuration
SSL_CERT_PATH=/etc/ssl/certs/pyairtable.crt
SSL_KEY_PATH=/etc/ssl/private/pyairtable.key
SSL_CA_PATH=/etc/ssl/certs/ca-certificates.crt
TLS_MIN_VERSION=1.2
TLS_MAX_VERSION=1.3

# Security Headers
HSTS_MAX_AGE=31536000
CSP_ENABLED=true
FRAME_OPTIONS=DENY
CONTENT_TYPE_OPTIONS=nosniff
XSS_PROTECTION=1

# Rate Limiting Enhanced
RATE_LIMIT_ENABLED=true
RATE_LIMIT_RPM=60
RATE_LIMIT_RPH=1000
RATE_LIMIT_BURST=20
RATE_LIMIT_WINDOW=300

# IP Whitelist for Admin Operations
ADMIN_IP_WHITELIST=127.0.0.1,::1
