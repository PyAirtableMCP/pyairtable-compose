# PyAirtable Services Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# SECURITY CONFIGURATION (CRITICAL - NEVER COMMIT ACTUAL VALUES)
# =============================================================================

# Internal API Key for service-to-service communication
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(48))"
API_KEY=your-super-secure-api-key-at-least-32-characters-long

# Airtable Personal Access Token
# Get from: https://airtable.com/developers/web/api/authentication
AIRTABLE_TOKEN=your-airtable-token

# Google Gemini API Key
# Get from: https://cloud.google.com/ai-platform/generative-ai/docs/api-key
GEMINI_API_KEY=your-gemini-api-key

# JWT Secret for token signing (optional, for future JWT implementation)
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(64))"
JWT_SECRET=your-jwt-secret-at-least-32-characters-long

# Database passwords
POSTGRES_PASSWORD=your-secure-postgres-password
REDIS_PASSWORD=your-secure-redis-password

# =============================================================================
# SERVICE CONFIGURATION
# =============================================================================

# Environment (development/staging/production)
ENVIRONMENT=development

# Service URLs (for inter-service communication)
AIRTABLE_GATEWAY_URL=http://airtable-gateway:8002
MCP_SERVER_URL=http://mcp-server:8001
LLM_ORCHESTRATOR_URL=http://llm-orchestrator:8003
API_GATEWAY_URL=http://api-gateway:8000

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed origins for CORS (comma-separated)
# PRODUCTION: Never use "*" - specify exact origins!
# DEVELOPMENT: Can use localhost variants
CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://localhost:8080

# Additional CORS settings (optional)
CORS_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_HEADERS=Content-Type,Authorization,X-API-Key,X-Request-ID
CORS_CREDENTIALS=true
CORS_MAX_AGE=86400

# =============================================================================
# SECURITY HARDENING
# =============================================================================

# Require HTTPS (true/false)
# Should be true in production
REQUIRE_HTTPS=false

# Rate limiting
DEFAULT_RATE_LIMIT=60/minute
BURST_RATE_LIMIT=120/minute

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=pyairtable
POSTGRES_USER=pyairtable

# Redis connection
REDIS_HOST=localhost  
REDIS_PORT=6379
REDIS_DB=0

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Log level (DEBUG/INFO/WARNING/ERROR)
LOG_LEVEL=INFO

# Log format (json/text)
LOG_FORMAT=json

# Metrics
METRICS_ENABLED=true
METRICS_PORT=9090

# =============================================================================
# SERVICE-SPECIFIC CONFIGURATION
# =============================================================================

# MCP Server
MCP_SERVER_NAME=airtable-mcp
MCP_SERVER_VERSION=1.0.0
MCP_SERVER_MODE=http
MCP_SERVER_PORT=8001

# Airtable Gateway
AIRTABLE_GATEWAY_PORT=8002

# LLM Orchestrator
LLM_ORCHESTRATOR_PORT=8003

# API Gateway
API_GATEWAY_PORT=8000

# =============================================================================
# DEVELOPMENT ONLY
# =============================================================================

# Sample Airtable Base ID for testing (replace with your actual base)
AIRTABLE_BASE=appXXXXXXXXXXXXXX