# Mimir Production Configuration
# High-performance metrics storage with S3 backend,
# multi-tenancy support, and comprehensive retention policies

target: all

# Common configuration
common:
  storage:
    backend: s3
    s3:
      endpoint: minio:9000
      bucket_name: mimir-blocks
      access_key_id: ${MINIO_ROOT_USER:-pyairtable_admin}
      secret_access_key: ${MINIO_ROOT_PASSWORD:-PyAirtable2025!}
      insecure: true
      http:
        timeout: 30s
        idle_conn_timeout: 90s
        response_header_timeout: 2m
        insecure_skip_verify: false
        max_idle_connections: 200
        max_idle_connections_per_host: 200
        max_connections_per_host: 0

# Server configuration
server:
  http_listen_port: 8080
  log_level: warn
  log_format: json
  grpc_server_max_recv_msg_size: 104857600
  grpc_server_max_send_msg_size: 104857600
  grpc_server_max_concurrent_streams: 1000

# Memberlist configuration for clustering
memberlist:
  node_name: mimir
  randomize_node_name: false
  stream_timeout: 10s
  retransmit_factor: 4
  pull_push_interval: 30s
  gossip_interval: 200ms
  gossip_nodes: 3
  gossip_to_dead_time: 30s
  left_ingesters_timeout: 5m
  bind_addr:
    - 0.0.0.0
  bind_port: 7946

# Ingester configuration for high throughput
ingester:
  ring:
    final_sleep: 0s
    num_tokens: 512
    tokens_file_path: /data/tokens
    unregister_on_shutdown: false
    kvstore:
      store: memberlist
    heartbeat_period: 15s
    heartbeat_timeout: 1m
    
  # TSDB configuration
  instance_limits:
    max_series: 2000000
    max_tenants: 1000
    max_ingestion_rate: 100000
  
  # Memory optimization
  memory_series_metrics_enabled: true
  active_series_metrics_enabled: true
  
  # Block uploads
  blocks_storage:
    tsdb:
      dir: /data/tsdb
      block_ranges_period: [2h, 12h, 24h]
      retention_period: 6h
      ship_interval: 1m
      ship_concurrency: 10
      max_tsdb_opening_concurrency_on_startup: 10
      
      # Series hash cache
      series_hash_cache_max_size_bytes: 1073741824
      
      # Head compaction
      head_compaction_interval: 1m
      head_compaction_concurrency: 5
      head_compaction_idle_timeout: 1h
      
      # Memory mapping
      memory_mapping_enabled: true
      
  # WAL configuration
  wal_enabled: true
  wal_dir: /data/wal

# Distributor configuration
distributor:
  ring:
    kvstore:
      store: memberlist
    heartbeat_period: 5s
    heartbeat_timeout: 1m
  
  # Rate limiting
  instance_limits:
    max_ingestion_rate: 100000
    max_inflight_push_requests: 30000
  
  # HA tracking
  ha_tracker:
    enable_ha_tracker: true
    kvstore:
      store: memberlist
    max_clusters: 100

# Querier configuration
querier:
  # Query performance
  max_concurrent: 20
  timeout: 2m
  max_samples: 50000000
  default_evaluation_interval: 1m
  
  # Store gateway
  store_gateway_addresses: dns+mimir:8080
  
  # Query sharding
  query_sharding_enabled: true
  query_sharding_max_sharded_queries: 128
  query_sharding_max_regexp_size_bytes: 4096

# Query frontend configuration
query_frontend:
  max_outstanding_requests_per_tenant: 100
  querier_forget_delay: 0
  scheduler_address: mimir:8080
  
  # Results cache
  results_cache:
    backend: memcached
    memcached:
      addresses: dns+memcached:11211
      timeout: 500ms
      max_idle_connections: 100
      max_async_buffer_size: 10000
      max_async_concurrency: 50
      max_get_multi_batch_size: 1024
      max_get_multi_concurrency: 100
      max_item_size: 1048576
  
  # Query stats
  query_stats_enabled: true
  
  # Parallelization
  parallelize_shardable_queries: true
  cache_results: true
  compress_responses: true
  log_queries_longer_than: 10s

# Query scheduler configuration
query_scheduler:
  max_outstanding_requests_per_tenant: 100
  querier_forget_delay: 0

# Ruler configuration for alerting
ruler:
  enable_api: true
  poll_interval: 1m
  
  # Storage
  rule_path: /data/rules
  
  # Alertmanager
  alertmanager_url: http://alertmanager:9093
  external_url: https://mimir.pyairtable.com
  
  # Ruler ring
  ring:
    kvstore:
      store: memberlist
    heartbeat_period: 5s
    heartbeat_timeout: 1m
  
  # Rule storage
  ruler_storage:
    backend: s3
    s3:
      endpoint: minio:9000
      bucket_name: mimir-ruler
      access_key_id: ${MINIO_ROOT_USER:-pyairtable_admin}
      secret_access_key: ${MINIO_ROOT_PASSWORD:-PyAirtable2025!}
      insecure: true

# Alertmanager configuration
alertmanager:
  enable_api: true
  
  # Storage
  data_dir: /data/alertmanager
  
  # Alertmanager storage
  alertmanager_storage:
    backend: s3
    s3:
      endpoint: minio:9000
      bucket_name: mimir-alertmanager
      access_key_id: ${MINIO_ROOT_USER:-pyairtable_admin}
      secret_access_key: ${MINIO_ROOT_PASSWORD:-PyAirtable2025!}
      insecure: true
  
  # External URL
  external_url: https://alertmanager.pyairtable.com
  
  # Clustering
  cluster:
    enabled: true
    peers: []
    peer_timeout: 15s
    gossip_interval: 200ms
    push_pull_interval: 60s

# Store gateway configuration
store_gateway:
  # Sharding
  sharding_enabled: true
  sharding_ring:
    replication_factor: 1
    kvstore:
      store: memberlist
    heartbeat_period: 15s
    heartbeat_timeout: 1m
  
  # Bucket store
  bucket_store:
    sync_interval: 15m
    max_concurrent: 20
    tenant_sync_concurrency: 10
    block_sync_concurrency: 20
    meta_sync_concurrency: 20
    
    # Index cache
    index_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211
        timeout: 450ms
        max_idle_connections: 100
        max_async_buffer_size: 10000
        max_async_concurrency: 50
        max_get_multi_batch_size: 1024
        max_get_multi_concurrency: 100
        max_item_size: 1048576
    
    # Chunks cache
    chunks_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211
        timeout: 450ms
        max_idle_connections: 100
        max_async_buffer_size: 10000
        max_async_concurrency: 50
        max_get_multi_batch_size: 1024
        max_get_multi_concurrency: 100
        max_item_size: 1048576
    
    # Metadata cache
    metadata_cache:
      backend: memcached
      memcached:
        addresses: dns+memcached:11211
        timeout: 450ms
        max_idle_connections: 100
        max_async_buffer_size: 10000
        max_async_concurrency: 50
        max_get_multi_batch_size: 1024
        max_get_multi_concurrency: 100
        max_item_size: 1048576

# Compactor configuration for data management
compactor:
  data_dir: /data/compactor
  
  # Compaction
  compaction_interval: 30m
  max_opening_blocks_concurrency: 4
  max_closing_blocks_concurrency: 2
  symbols_flushers_concurrency: 4
  
  # Retention
  deletion_delay: 12h
  tenant_cleanup_delay: 6h
  
  # Sharding
  sharding_enabled: true
  sharding_ring:
    kvstore:
      store: memberlist
    heartbeat_period: 15s
    heartbeat_timeout: 1m

# Limits configuration for production tenants
limits:
  # Ingestion limits
  ingestion_rate: 100000
  ingestion_burst_size: 200000
  max_global_series_per_user: 2000000
  max_global_series_per_metric: 0
  max_global_metadata_per_user: 8000
  max_global_metadata_per_metric: 10
  max_global_exemplars_per_user: 100000
  
  # Query limits
  max_total_query_length: 12000h
  max_partial_query_length: 768h
  max_query_parallelism: 14
  max_labels_query_length: 30d
  max_cache_freshness: 10m
  max_queriers_per_tenant: 0
  max_series_per_query: 100000
  max_samples_per_query: 50000000
  max_labels_per_series: 30
  max_metadata_per_query: 100000
  max_chunks_per_query: 2000000
  max_fetch_series_per_query: 100000
  max_query_expression_size_bytes: 4096
  
  # Compaction limits
  compactor_blocks_retention_period: 0s
  
  # Per-tenant overrides
  max_exemplars_per_series: 10
  
  # Split instant queries
  split_instant_queries_by_interval: 0s
  
  # Native histograms
  native_histograms_ingestion_enabled: false

# Activity tracker
activity_tracker:
  filepath: /data/metrics-activity.log
  max_entries: 5000000

# Usage stats
usage_stats:
  enabled: false

# Runtime configuration
runtime_config:
  period: 10s
  file: /etc/mimir/runtime.yaml

# Multi-tenancy
multitenancy_enabled: false

# No auth token required for single tenant mode
auth_enabled: false