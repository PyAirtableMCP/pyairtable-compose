# PyAirtable Platform Alert Rules
# Cost-aware alerting for production workloads

groups:
  # === SERVICE HEALTH ALERTS ===
  - name: service_health
    rules:
      # Service down alert
      - alert: ServiceDown
        expr: up == 0
        for: 30s
        labels:
          severity: critical
          tier: "{{ $labels.tier }}"
        annotations:
          summary: "Service {{ $labels.service }} is down"
          description: "Service {{ $labels.service }} on {{ $labels.instance }} has been down for more than 30 seconds."
          runbook: "Check service logs and container status"

      # High error rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
          tier: "{{ $labels.tier }}"
        annotations:
          summary: "High error rate for {{ $labels.service }}"
          description: "Error rate is {{ $value | humanizePercentage }} for service {{ $labels.service }}"

  # === PERFORMANCE ALERTS ===
  - name: performance
    rules:
      # High response time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 3m
        labels:
          severity: warning
          tier: "{{ $labels.tier }}"
        annotations:
          summary: "High response time for {{ $labels.service }}"
          description: "95th percentile response time is {{ $value }}s for {{ $labels.service }}"

      # CPU usage alert
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          tier: system
        annotations:
          summary: "High CPU usage on {{ $labels.instance }}"
          description: "CPU usage is {{ $value }}% on {{ $labels.instance }}"

      # Memory usage alert
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          tier: system
        annotations:
          summary: "High memory usage on {{ $labels.instance }}"
          description: "Memory usage is {{ $value }}% on {{ $labels.instance }}"

  # === DATABASE ALERTS ===
  - name: database
    rules:
      # PostgreSQL connection issues
      - alert: PostgreSQLTooManyConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 2m
        labels:
          severity: warning
          tier: database
        annotations:
          summary: "PostgreSQL has too many connections"
          description: "PostgreSQL connection usage is {{ $value | humanizePercentage }}"

      # Database response time
      - alert: DatabaseSlowQueries
        expr: rate(pg_stat_statements_mean_time_ms[5m]) > 1000
        for: 3m
        labels:
          severity: warning
          tier: database
        annotations:
          summary: "Slow database queries detected"
          description: "Average query time is {{ $value }}ms"

      # Redis memory usage
      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 2m
        labels:
          severity: warning
          tier: cache
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

  # === COST OPTIMIZATION ALERTS ===
  - name: cost_optimization
    rules:
      # Unused services (no requests)
      - alert: UnusedService
        expr: rate(http_requests_total[1h]) == 0
        for: 30m
        labels:
          severity: info
          tier: "{{ $labels.tier }}"
          cost_impact: medium
        annotations:
          summary: "Service {{ $labels.service }} has no traffic"
          description: "Service {{ $labels.service }} received no requests in the last hour. Consider scaling down."

      # High resource usage without proportional traffic
      - alert: InefficientResourceUsage
        expr: (rate(container_cpu_usage_seconds_total[5m]) > 0.5) and (rate(http_requests_total[5m]) < 0.1)
        for: 10m
        labels:
          severity: info
          tier: "{{ $labels.tier }}"
          cost_impact: high
        annotations:
          summary: "High resource usage with low traffic for {{ $labels.service }}"
          description: "Service {{ $labels.service }} is using significant CPU but handling few requests"

  # === AI/ML SPECIFIC ALERTS ===
  - name: ai_ml
    rules:
      # High AI API costs
      - alert: HighAIAPICosts
        expr: rate(ai_api_requests_total[1h]) * avg(ai_api_cost_per_request) > 10
        for: 15m
        labels:
          severity: warning
          tier: ai-ml
          cost_impact: high
        annotations:
          summary: "High AI API costs detected"
          description: "AI API costs are trending high at ${{ $value }}/hour"

      # AI request failures
      - alert: AIRequestFailures
        expr: rate(ai_api_requests_total{status="error"}[5m]) / rate(ai_api_requests_total[5m]) > 0.05
        for: 2m
        labels:
          severity: warning
          tier: ai-ml
        annotations:
          summary: "High AI request failure rate"
          description: "AI request failure rate is {{ $value | humanizePercentage }}"

  # === SECURITY ALERTS ===
  - name: security
    rules:
      # Too many authentication failures
      - alert: HighAuthenticationFailures
        expr: rate(auth_failures_total[5m]) > 10
        for: 2m
        labels:
          severity: warning
          tier: security
        annotations:
          summary: "High authentication failure rate"
          description: "Authentication failure rate is {{ $value }} failures/second"

      # Suspicious API usage patterns
      - alert: SuspiciousAPIUsage
        expr: rate(http_requests_total{status="401"}[5m]) > 5
        for: 3m
        labels:
          severity: warning
          tier: security
        annotations:
          summary: "High rate of unauthorized requests"
          description: "Unauthorized request rate is {{ $value }} requests/second"

  # === ELASTICSEARCH ALERTS ===
  - name: elasticsearch
    rules:
      # Elasticsearch cluster health
      - alert: ElasticsearchClusterHealthRed
        expr: elasticsearch_cluster_health_status{color="red"} == 1
        for: 1m
        labels:
          severity: critical
          tier: logging
        annotations:
          summary: "Elasticsearch cluster health is RED"
          description: "Elasticsearch cluster health is RED - some shards are not allocated"

      # High disk usage
      - alert: ElasticsearchHighDiskUsage
        expr: elasticsearch_filesystem_data_used_percent > 85
        for: 5m
        labels:
          severity: warning
          tier: logging
        annotations:
          summary: "Elasticsearch disk usage is high"
          description: "Elasticsearch disk usage is {{ $value }}%"

  # === BUSINESS METRICS ALERTS ===
  - name: business_metrics
    rules:
      # Low user engagement
      - alert: LowUserEngagement
        expr: rate(user_sessions_total[1h]) < 10
        for: 30m
        labels:
          severity: info
          tier: business
        annotations:
          summary: "Low user engagement detected"
          description: "User session rate is {{ $value }} sessions/hour"

      # Workflow execution failures
      - alert: HighWorkflowFailureRate
        expr: rate(workflow_executions_total{status="failed"}[10m]) / rate(workflow_executions_total[10m]) > 0.1
        for: 5m
        labels:
          severity: warning
          tier: automation
        annotations:
          summary: "High workflow failure rate"
          description: "Workflow failure rate is {{ $value | humanizePercentage }}"