# Prometheus Alert Rules for Production

groups:
  - name: service.rules
    rules:
      # Service availability alerts
      - alert: ServiceDown
        expr: up == 0
        for: 2m
        labels:
          severity: critical
          category: availability
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "{{ $labels.job }} has been down for more than 2 minutes."
          runbook_url: "https://runbooks.company.com/service-down"

      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.05
        for: 5m
        labels:
          severity: critical
          category: errors
        annotations:
          summary: "High error rate on {{ $labels.job }}"
          description: "{{ $labels.job }} has a 5XX error rate above 5% for the last 5 minutes."

      - alert: HighLatency
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
        for: 5m
        labels:
          severity: warning
          category: performance
        annotations:
          summary: "High latency on {{ $labels.job }}"
          description: "{{ $labels.job }} 95th percentile latency is above 1 second."

  - name: infrastructure.rules
    rules:
      # Database alerts
      - alert: PostgreSQLDown
        expr: pg_up == 0
        for: 2m
        labels:
          severity: critical
          category: database
        annotations:
          summary: "PostgreSQL database is down"
          description: "PostgreSQL database has been down for more than 2 minutes."

      - alert: PostgreSQLTooManyConnections
        expr: sum(pg_stat_activity_count) by (instance) > 180
        for: 5m
        labels:
          severity: warning
          category: database
        annotations:
          summary: "PostgreSQL has too many connections"
          description: "PostgreSQL has {{ $value }} connections (> 180)."

      - alert: PostgreSQLSlowQueries
        expr: rate(pg_stat_database_tup_fetched[5m]) / rate(pg_stat_database_tup_returned[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          category: performance
        annotations:
          summary: "PostgreSQL slow queries detected"
          description: "PostgreSQL query efficiency is low."

      # Redis alerts
      - alert: RedisDown
        expr: redis_up == 0
        for: 2m
        labels:
          severity: critical
          category: cache
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 2 minutes."

      - alert: RedisMemoryUsageHigh
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          category: resource
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis memory usage is above 90%."

  - name: system.rules
    rules:
      # System resource alerts
      - alert: HighCPUUsage
        expr: (100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 85
        for: 10m
        labels:
          severity: warning
          category: resource
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is above 85% for more than 10 minutes."

      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) > 0.9
        for: 5m
        labels:
          severity: critical
          category: resource
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is above 90%."

      - alert: DiskSpaceUsageHigh
        expr: (node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes > 0.85
        for: 5m
        labels:
          severity: warning
          category: resource
        annotations:
          summary: "High disk usage detected"
          description: "Disk usage is above 85% on {{ $labels.mountpoint }}."

      - alert: DiskSpaceUsageCritical
        expr: (node_filesystem_size_bytes - node_filesystem_filesystem_free_bytes) / node_filesystem_size_bytes > 0.95
        for: 2m
        labels:
          severity: critical
          category: resource
        annotations:
          summary: "Critical disk usage detected"
          description: "Disk usage is above 95% on {{ $labels.mountpoint }}."

  - name: security.rules
    rules:
      # Security alerts
      - alert: SecurityVulnerabilityHigh
        expr: trivy_vulnerabilities{severity="HIGH"} > 0
        for: 0m
        labels:
          severity: warning
          category: security
        annotations:
          summary: "High severity vulnerabilities detected"
          description: "{{ $value }} high severity vulnerabilities found in {{ $labels.image }}."

      - alert: SecurityVulnerabilityCritical
        expr: trivy_vulnerabilities{severity="CRITICAL"} > 0
        for: 0m
        labels:
          severity: critical
          category: security
        annotations:
          summary: "Critical security vulnerabilities detected"
          description: "{{ $value }} critical vulnerabilities found in {{ $labels.image }}."

      - alert: UnauthorizedAccess
        expr: rate(nginx_http_requests_total{status="401"}[5m]) > 10
        for: 2m
        labels:
          severity: warning
          category: security
        annotations:
          summary: "High rate of unauthorized access attempts"
          description: "More than 10 unauthorized access attempts per second."

      - alert: RateLimitExceeded
        expr: rate(nginx_http_requests_total{status="429"}[5m]) > 50
        for: 5m
        labels:
          severity: warning
          category: security
        annotations:
          summary: "Rate limit frequently exceeded"
          description: "Rate limit exceeded more than 50 times per second."

  - name: business.rules
    rules:
      # Business logic alerts
      - alert: APIRequestVolumeDropped
        expr: rate(http_requests_total[15m]) < 0.5 * rate(http_requests_total[1h] offset 24h)
        for: 10m
        labels:
          severity: warning
          category: business
        annotations:
          summary: "API request volume significantly dropped"
          description: "Current API request rate is 50% lower than the same time yesterday."

      - alert: LLMCostThresholdExceeded
        expr: llm_cost_total > 1000
        for: 0m
        labels:
          severity: warning
          category: business
        annotations:
          summary: "LLM cost threshold exceeded"
          description: "LLM costs have exceeded $1000 for the current billing period."

      - alert: AirtableAPILimitApproaching
        expr: airtable_api_requests_remaining < 100
        for: 0m
        labels:
          severity: warning
          category: business
        annotations:
          summary: "Airtable API limit approaching"
          description: "Less than 100 Airtable API requests remaining for current limit period."