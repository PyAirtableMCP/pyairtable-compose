server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.project=pyairtable-compose"]
    relabel_configs:
      # Set the log path
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      # Extract container name
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.+)'
        target_label: 'container'
      # Extract service name from compose
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      # Extract project name
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
      # Set log level based on content
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'log_level'
        replacement: 'info'

    pipeline_stages:
      # Parse JSON logs
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            service: service
            trace_id: trace_id
            span_id: span_id
      
      # Parse timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          fallback_formats:
            - RFC3339
            - "2006-01-02T15:04:05.000Z"
            - "2006-01-02 15:04:05"
      
      # Set log level label
      - labels:
          level:
          service:
          trace_id:
          span_id:
      
      # Add static labels
      - static_labels:
          environment: development
          cluster: pyairtable-local

  # Application-specific log parsing
  - job_name: api-gateway-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.service=api-gateway"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.+)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            method: method
            path: path
            status_code: status_code
            response_time: response_time
            user_id: user_id
            request_id: request_id
            trace_id: trace_id
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          method:
          status_code:
          trace_id:
          request_id:

  - job_name: ai-processing-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.service=ai-processing-service"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.+)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            model: model
            tokens_used: tokens_used
            processing_time: processing_time
            trace_id: trace_id
            session_id: session_id
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - labels:
          level:
          model:
          trace_id:
          session_id:

  - job_name: postgres-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.service=postgres"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.+)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05.000 MST"
      - labels:
          level:
          pid:

  - job_name: redis-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.service=redis"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.+)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
    pipeline_stages:
      - regex:
          expression: '(?P<pid>\d+):(?P<role>\w+) (?P<timestamp>\d{2} \w{3} \d{4} \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>[\*\#\-\.]) (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: "02 Jan 2006 15:04:05.000"
      - labels:
          level:
          role:
          pid: