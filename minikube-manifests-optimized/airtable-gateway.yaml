apiVersion: apps/v1
kind: Deployment
metadata:
  name: airtable-gateway
  namespace: pyairtable-dev
  labels:
    app: airtable-gateway
    component: gateway
    environment: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airtable-gateway
  template:
    metadata:
      labels:
        app: airtable-gateway
        component: gateway
        environment: development
    spec:
      containers:
      - name: airtable-gateway
        image: airtable-gateway-py:latest
        imagePullPolicy: Never  # Use local images
        ports:
        - name: http
          containerPort: 8002
          protocol: TCP
        
        # Development environment variables
        env:
        - name: PORT
          value: "8002"
        - name: HOST
          value: "0.0.0.0"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: pyairtable-dev-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: pyairtable-dev-config
              key: LOG_LEVEL
        - name: ENABLE_DEBUG_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              name: pyairtable-dev-config
              key: ENABLE_DEBUG_ENDPOINTS
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: API_KEY
        - name: AIRTABLE_TOKEN
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: AIRTABLE_TOKEN
        - name: CORS_ORIGINS
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: CORS_ORIGINS
        
        # Optimized resource limits for development
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        
        # Fast health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        # Development volume mounts for hot reload
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        
        # Security context (relaxed for development)
        securityContext:
          runAsNonRoot: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      
      volumes:
      - name: app-logs
        emptyDir: {}
      
      # Fast startup and shutdown
      terminationGracePeriodSeconds: 10
      
      # Development restart policy
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: airtable-gateway
  namespace: pyairtable-dev
  labels:
    app: airtable-gateway
    component: gateway
    environment: development
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8002
    targetPort: 8002
    protocol: TCP
  selector:
    app: airtable-gateway

---
# Service for easy external access during development
apiVersion: v1
kind: Service
metadata:
  name: airtable-gateway-external
  namespace: pyairtable-dev
  labels:
    app: airtable-gateway
    component: gateway-external
    environment: development
spec:
  type: NodePort
  ports:
  - name: http
    port: 8002
    targetPort: 8002
    nodePort: 30002
    protocol: TCP
  selector:
    app: airtable-gateway