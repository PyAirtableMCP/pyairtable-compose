apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-services
  namespace: pyairtable-dev
  labels:
    app: platform-services
    component: backend
    environment: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: platform-services
  template:
    metadata:
      labels:
        app: platform-services
        component: backend
        environment: development
    spec:
      containers:
      - name: platform-services
        image: pyairtable-platform-services:latest
        imagePullPolicy: Never
        ports:
        - name: http
          containerPort: 8007
          protocol: TCP
        
        env:
        - name: PORT
          value: "8007"
        - name: HOST
          value: "0.0.0.0"
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: pyairtable-dev-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: pyairtable-dev-config
              key: LOG_LEVEL
        - name: ENABLE_DEBUG_ENDPOINTS
          valueFrom:
            configMapKeyRef:
              name: pyairtable-dev-config
              key: ENABLE_DEBUG_ENDPOINTS
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: JWT_SECRET
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres:5432/$(POSTGRES_DB)"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: POSTGRES_DB
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: REDIS_PASSWORD
        - name: CORS_ORIGINS
          valueFrom:
            secretKeyRef:
              name: pyairtable-dev-secrets
              key: CORS_ORIGINS
        - name: PASSWORD_MIN_LENGTH
          value: "6"  # Relaxed for development
        - name: PASSWORD_HASH_ROUNDS
          value: "8"  # Faster for development
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8007
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8007
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        
        securityContext:
          runAsNonRoot: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: uploads
        emptyDir:
          sizeLimit: 500Mi
      
      terminationGracePeriodSeconds: 15
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: platform-services
  namespace: pyairtable-dev
  labels:
    app: platform-services
    component: backend
    environment: development
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8007
    targetPort: 8007
    protocol: TCP
  selector:
    app: platform-services

---
apiVersion: v1
kind: Service
metadata:
  name: platform-services-external
  namespace: pyairtable-dev
  labels:
    app: platform-services
    component: backend-external
    environment: development
spec:
  type: NodePort
  ports:
  - name: http
    port: 8007
    targetPort: 8007
    nodePort: 30007
    protocol: TCP
  selector:
    app: platform-services