syntax = "proto3";

package pyairtable.file.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "pyairtable/common/v1/common.proto";

option go_package = "github.com/pyairtable/pyairtable-protos/generated/go/pyairtable/file/v1;filev1";

// File status enum
enum FileStatus {
  FILE_STATUS_UNSPECIFIED = 0;
  FILE_STATUS_UPLOADING = 1;
  FILE_STATUS_PROCESSING = 2;
  FILE_STATUS_READY = 3;
  FILE_STATUS_FAILED = 4;
  FILE_STATUS_DELETED = 5;
}

// File model
message File {
  pyairtable.common.v1.BaseMetadata metadata = 1;
  string filename = 2;
  string content_type = 3;
  int64 size_bytes = 4;
  FileStatus status = 5;
  string storage_path = 6;
  optional string download_url = 7;
  optional string thumbnail_url = 8;
  string uploader_id = 9;
  map<string, string> file_metadata = 10;
  string tenant_id = 11;
}

// Upload file request
message UploadFileRequest {
  pyairtable.common.v1.RequestMetadata request_metadata = 1;
  string filename = 2;
  string content_type = 3;
  bytes content = 4;
  map<string, string> file_metadata = 5;
}

// Upload file response
message UploadFileResponse {
  File file = 1;
}

// Get file request
message GetFileRequest {
  pyairtable.common.v1.RequestMetadata request_metadata = 1;
  string file_id = 2;
}

// Get file response
message GetFileResponse {
  File file = 1;
}

// Delete file request
message DeleteFileRequest {
  pyairtable.common.v1.RequestMetadata request_metadata = 1;
  string file_id = 2;
}

// Delete file response
message DeleteFileResponse {
  bool success = 1;
  string message = 2;
}

// File Service
service FileService {
  // Upload file
  rpc UploadFile(UploadFileRequest) returns (UploadFileResponse);
  
  // Get file
  rpc GetFile(GetFileRequest) returns (GetFileResponse);
  
  // Delete file
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
  
  // Health check
  rpc HealthCheck(google.protobuf.Empty) returns (pyairtable.common.v1.HealthCheckResponse);
}