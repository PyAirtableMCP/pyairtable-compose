apiVersion: chaos-mesh.org/v1alpha1
kind: Workflow
metadata:
  name: basic-pod-failure-workflow
  namespace: chaos-engineering
spec:
  entry: pod-failure-test
  templates:
    - name: pod-failure-test
      templateType: Serial
      deadline: 15m
      children:
        - health-check-pre
        - api-gateway-failure
        - auth-service-failure
        - platform-service-failure
        - health-check-post
    
    - name: health-check-pre
      templateType: Task
      deadline: 2m
      task:
        container:
          name: health-check
          image: curlimages/curl:latest
          command: ["/bin/sh"]
          args:
            - -c
            - |
              echo "üîç Pre-chaos health verification"
              
              # Check API Gateway
              if curl -f -m 10 http://api-gateway.pyairtable.svc.cluster.local:8080/health; then
                echo "‚úÖ API Gateway is healthy"
              else
                echo "‚ùå API Gateway health check failed"
                exit 1
              fi
              
              # Check Auth Service
              if curl -f -m 10 http://auth-service.pyairtable.svc.cluster.local:8081/health; then
                echo "‚úÖ Auth Service is healthy"
              else
                echo "‚ùå Auth Service health check failed"
                exit 1
              fi
              
              # Check Platform Services
              if curl -f -m 10 http://platform-services.pyairtable.svc.cluster.local:8000/health; then
                echo "‚úÖ Platform Services is healthy"
              else
                echo "‚ùå Platform Services health check failed"
                exit 1
              fi
              
              echo "üéØ All services healthy - proceeding with chaos experiment"
    
    - name: api-gateway-failure
      templateType: Task
      deadline: 5m
      task:
        podChaos:
          action: pod-kill
          mode: one
          selector:
            namespaces:
              - pyairtable
            labelSelectors:
              "app": "api-gateway"
          duration: "30s"
    
    - name: auth-service-failure
      templateType: Task
      deadline: 5m
      task:
        podChaos:
          action: pod-kill
          mode: one
          selector:
            namespaces:
              - pyairtable
            labelSelectors:
              "app": "auth-service"
          duration: "30s"
    
    - name: platform-service-failure
      templateType: Task
      deadline: 5m
      task:
        podChaos:
          action: pod-kill
          mode: one
          selector:
            namespaces:
              - pyairtable
            labelSelectors:
              "app": "platform-services"
          duration: "30s"
    
    - name: health-check-post
      templateType: Task
      deadline: 5m
      task:
        container:
          name: recovery-check
          image: curlimages/curl:latest
          command: ["/bin/sh"]
          args:
            - -c
            - |
              echo "üîÑ Post-chaos recovery verification"
              sleep 60  # Allow time for pod restart and service recovery
              
              # Check API Gateway recovery
              for i in {1..12}; do
                if curl -f -m 10 http://api-gateway.pyairtable.svc.cluster.local:8080/health; then
                  echo "‚úÖ API Gateway recovered successfully"
                  break
                fi
                echo "‚è≥ Waiting for API Gateway recovery... ($i/12)"
                sleep 15
              done
              
              # Check Auth Service recovery
              for i in {1..12}; do
                if curl -f -m 10 http://auth-service.pyairtable.svc.cluster.local:8081/health; then
                  echo "‚úÖ Auth Service recovered successfully"
                  break
                fi
                echo "‚è≥ Waiting for Auth Service recovery... ($i/12)"
                sleep 15
              done
              
              # Check Platform Services recovery
              for i in {1..12}; do
                if curl -f -m 10 http://platform-services.pyairtable.svc.cluster.local:8000/health; then
                  echo "‚úÖ Platform Services recovered successfully"
                  break
                fi
                echo "‚è≥ Waiting for Platform Services recovery... ($i/12)"
                sleep 15
              done
              
              echo "üéâ Basic pod failure resilience test completed successfully"