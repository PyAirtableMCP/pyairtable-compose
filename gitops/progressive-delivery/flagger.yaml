apiVersion: v1
kind: Namespace
metadata:
  name: flagger-system
  labels:
    name: flagger-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flagger
  namespace: flagger-system
  labels:
    app.kubernetes.io/name: flagger
    app.kubernetes.io/version: "1.34.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: flagger
  template:
    metadata:
      labels:
        app.kubernetes.io/name: flagger
    spec:
      serviceAccountName: flagger
      containers:
        - name: flagger
          image: ghcr.io/fluxcd/flagger:1.34.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
            - name: metrics
              containerPort: 8081
          command:
            - ./flagger
            - -log-level=info
            - -metrics-addr=:8081
            - -enable-leader-election=false
            - -slack-user=flagger
            - -slack-channel=#alerts
            - -include-label-prefix=app.kubernetes.io
          env:
            - name: SLACK_URL
              valueFrom:
                secretKeyRef:
                  name: slack
                  key: url
                  optional: true
          livenessProbe:
            exec:
              command:
                - wget
                - --quiet
                - --tries=1
                - --timeout=4
                - --spider
                - http://localhost:8080/healthz
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - wget
                - --quiet
                - --tries=1
                - --timeout=4
                - --spider
                - http://localhost:8080/healthz
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flagger
  namespace: flagger-system
  labels:
    app.kubernetes.io/name: flagger
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flagger
  labels:
    app.kubernetes.io/name: flagger
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "update", "patch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: ["flagger.app"]
    resources: ["canaries", "metrictemplates", "alertproviders"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["flagger.app"]
    resources: ["canaries/status", "metrictemplates/status", "alertproviders/status"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["networking.istio.io"]
    resources: ["virtualservices", "destinationrules"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: ["split.smi-spec.io"]
    resources: ["trafficsplits"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: ["specs.smi-spec.io"]
    resources: ["httproutegroups"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: ["argoproj.io"]
    resources: ["rollouts"]
    verbs: ["get", "list", "create", "update", "patch"]
  - apiGroups: ["argoproj.io"]
    resources: ["analysisruns", "experiments"]
    verbs: ["get", "list", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flagger
  labels:
    app.kubernetes.io/name: flagger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flagger
subjects:
  - kind: ServiceAccount
    name: flagger
    namespace: flagger-system
---
apiVersion: v1
kind: Service
metadata:
  name: flagger
  namespace: flagger-system
  labels:
    app.kubernetes.io/name: flagger
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: metrics
      port: 8081
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/name: flagger
---
# Flagger CRDs
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: canaries.flagger.app
  labels:
    app.kubernetes.io/name: flagger
spec:
  group: flagger.app
  versions:
    - name: v1beta1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                provider:
                  type: string
                targetRef:
                  type: object
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                progressDeadlineSeconds:
                  type: integer
                service:
                  type: object
                  properties:
                    name:
                      type: string
                    port:
                      type: integer
                    portName:
                      type: string
                    targetPort:
                      anyOf:
                        - type: integer
                        - type: string
                    portDiscovery:
                      type: boolean
                    headers:
                      type: object
                    corsPolicy:
                      type: object
                    gateways:
                      type: array
                      items:
                        type: string
                    hosts:
                      type: array
                      items:
                        type: string
                    trafficPolicy:
                      type: object
                    match:
                      type: array
                      items:
                        type: object
                    rewrite:
                      type: object
                    timeout:
                      type: string
                    retries:
                      type: object
                    mirror:
                      type: object
                    delegate:
                      type: object
                analysis:
                  type: object
                  properties:
                    interval:
                      type: string
                    threshold:
                      type: integer
                    maxWeight:
                      type: integer
                    stepWeight:
                      type: integer
                    stepWeights:
                      type: array
                      items:
                        type: integer
                    stepWeightPromotion:
                      type: integer
                    metrics:
                      type: array
                      items:
                        type: object
                    webhooks:
                      type: array
                      items:
                        type: object
                    alerts:
                      type: array
                      items:
                        type: object
                    primaryReadyThreshold:
                      type: integer
                    canaryReadyThreshold:
                      type: integer
            status:
              type: object
  scope: Namespaced
  names:
    plural: canaries
    singular: canary
    kind: Canary
    shortNames:
      - c
---
# Prometheus ServiceMonitor for Flagger metrics
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: flagger
  namespace: flagger-system
  labels:
    app.kubernetes.io/name: flagger
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: flagger
  endpoints:
    - port: metrics
      interval: 15s
      path: /metrics