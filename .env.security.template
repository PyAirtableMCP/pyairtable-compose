# =============================================================================
# ENHANCED SECURITY CONFIGURATION TEMPLATE
# PyAirtable Compose - Production Security Settings
# =============================================================================

# =============================================================================
# DATABASE SECURITY CONFIGURATION
# =============================================================================

# PostgreSQL Connection with SSL
DATABASE_URL="postgres://user:password@localhost/pyairtable?sslmode=require"
DB_SSL_MODE=require
DB_SSL_CERT=/path/to/client-cert.pem
DB_SSL_KEY=/path/to/client-key.pem
DB_SSL_ROOT_CERT=/path/to/ca-cert.pem

# Enhanced Connection Pool Settings
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME=300
DB_CONN_MAX_IDLE_TIME=60
DB_RETRY_ATTEMPTS=3
DB_RETRY_BACKOFF=1
DB_HEALTH_CHECK_INTERVAL=30

# =============================================================================
# REDIS SECURITY CONFIGURATION
# =============================================================================

# Redis with Password Authentication and TLS
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-strong-redis-password-here
REDIS_DB=0
REDIS_TLS_ENABLED=true
REDIS_TLS_CERT=/path/to/redis-client-cert.pem
REDIS_TLS_KEY=/path/to/redis-client-key.pem
REDIS_TLS_CA_CERT=/path/to/redis-ca-cert.pem
REDIS_POOL_SIZE=10
REDIS_RETRY_ATTEMPTS=3

# =============================================================================
# JWT SECURITY CONFIGURATION
# =============================================================================

# Enhanced JWT Settings with Shorter Token Lifetimes
JWT_SECRET=your-super-secure-jwt-secret-minimum-32-characters
JWT_REFRESH_SECRET=your-super-secure-refresh-secret-minimum-32-characters
JWT_ISSUER=pyairtable-compose
JWT_EXPIRES_IN=900          # 15 minutes for access tokens
JWT_REFRESH_EXPIRES_IN=604800  # 7 days for refresh tokens

# =============================================================================
# AUDIT LOGGING CONFIGURATION
# =============================================================================

# Centralized Audit Logging
AUDIT_ENABLED=true
AUDIT_SECRET_KEY=your-audit-tamper-protection-secret-minimum-32-characters
AUDIT_BUFFER_SIZE=100
AUDIT_FLUSH_INTERVAL=10

# =============================================================================
# SIEM INTEGRATION CONFIGURATION
# =============================================================================

# SIEM Configuration (choose one: elasticsearch, splunk, sumo, custom)
SIEM_TYPE=elasticsearch
SIEM_URL=https://your-elasticsearch-cluster:9200
SIEM_API_KEY=your-elasticsearch-api-key
SIEM_USERNAME=elastic
SIEM_PASSWORD=your-elasticsearch-password
SIEM_INDEX=pyairtable-audit
SIEM_BATCH_SIZE=100
SIEM_FLUSH_INTERVAL=30
SIEM_TLS_ENABLED=true
SIEM_TLS_SKIP_VERIFY=false

# Alternative SIEM configurations:

# For Splunk:
# SIEM_TYPE=splunk
# SIEM_URL=https://your-splunk-instance:8088/services/collector/event
# SIEM_API_KEY=your-splunk-hec-token

# For Sumo Logic:
# SIEM_TYPE=sumo
# SIEM_URL=https://endpoint.collection.sumologic.com/receiver/v1/http/your-collector-url

# For Custom endpoint:
# SIEM_TYPE=custom
# SIEM_URL=https://your-custom-siem-endpoint
# SIEM_API_KEY=your-api-key

# =============================================================================
# GENERAL SECURITY SETTINGS
# =============================================================================

# Environment
ENVIRONMENT=production

# API Security
REQUIRE_API_KEY=true
API_KEY=your-secure-api-key-minimum-32-characters

# Password Policy
PASSWORD_MIN_LENGTH=12
PASSWORD_HASH_ROUNDS=14

# Rate Limiting
RATE_LIMIT_RPM=100
RATE_LIMIT_BURST=10

# CORS Configuration (restrict in production)
CORS_ORIGINS=https://your-frontend-domain.com,https://your-app-domain.com

# Metrics and Monitoring
METRICS_ENABLED=true
METRICS_NAMESPACE=pyairtable
METRICS_PATH=/metrics

# Logging
LOG_LEVEL=info
LOG_FORMAT=json

# =============================================================================
# TLS/SSL CERTIFICATES PATHS
# =============================================================================

# Application TLS Certificates
TLS_CERT_PATH=/etc/ssl/certs/app-cert.pem
TLS_KEY_PATH=/etc/ssl/private/app-key.pem
TLS_CA_CERT_PATH=/etc/ssl/certs/ca-cert.pem

# =============================================================================
# SECURITY MONITORING ALERTS
# =============================================================================

# Alert thresholds for security monitoring
FAILED_LOGIN_THRESHOLD=5
SECURITY_INCIDENT_EMAIL=security@your-domain.com
SECURITY_WEBHOOK_URL=https://your-security-webhook-endpoint

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================

# PostgreSQL Production Settings
POSTGRES_DB=pyairtable_prod
POSTGRES_USER=pyairtable_user
POSTGRES_PASSWORD=your-super-secure-postgres-password

# Service-specific configurations
PORT=8080
HOST=0.0.0.0

# Service URLs (internal)
AUTH_SERVICE_URL=http://auth-service:8001
USER_SERVICE_URL=http://user-service:8002
PERMISSION_SERVICE_URL=http://permission-service:8003
WORKSPACE_SERVICE_URL=http://workspace-service:8004
NOTIFICATION_SERVICE_URL=http://notification-service:8005
FILE_SERVICE_URL=http://file-service:8006
WEBHOOK_SERVICE_URL=http://webhook-service:8007
MOBILE_BFF_URL=http://mobile-bff:8008
WEB_BFF_URL=http://web-bff:8009

# Python Services
AIRTABLE_GATEWAY_URL=http://airtable-gateway:8002
LLM_ORCHESTRATOR_URL=http://llm-orchestrator:8003
MCP_SERVER_URL=http://mcp-server:8001

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================

# 1. Change ALL default passwords and secrets above
# 2. Use proper TLS certificates in production
# 3. Configure SIEM integration for your security infrastructure
# 4. Set up proper backup and disaster recovery
# 5. Configure monitoring and alerting
# 6. Review and adjust rate limits based on your traffic
# 7. Implement proper key rotation procedures
# 8. Configure network security groups/firewalls
# 9. Enable audit logging and monitor for security events
# 10. Test security configurations before production deployment

# =============================================================================
# SECURITY CHECKLIST
# =============================================================================

# ✅ Database connections use SSL/TLS encryption
# ✅ Redis authentication and TLS enabled
# ✅ JWT tokens use secure secrets and short expiration times
# ✅ Refresh token rotation and blacklisting implemented
# ✅ Centralized audit logging with tamper protection
# ✅ SIEM integration configured
# ✅ Rate limiting enabled
# ✅ Strong password policies enforced
# ✅ API key authentication required
# ✅ CORS properly configured
# ✅ Security headers implemented
# ✅ Connection pools properly configured
# ✅ Health checks and monitoring enabled