// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pyairtable/permission/v1/permission.proto

package permissionv1

import (
	v1 "github.com/pyairtable/pyairtable-protos/generated/go/pyairtable/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Permission level enum
type PermissionLevel int32

const (
	PermissionLevel_PERMISSION_LEVEL_UNSPECIFIED PermissionLevel = 0
	PermissionLevel_PERMISSION_LEVEL_NONE        PermissionLevel = 1
	PermissionLevel_PERMISSION_LEVEL_READ        PermissionLevel = 2
	PermissionLevel_PERMISSION_LEVEL_WRITE       PermissionLevel = 3
	PermissionLevel_PERMISSION_LEVEL_ADMIN       PermissionLevel = 4
	PermissionLevel_PERMISSION_LEVEL_OWNER       PermissionLevel = 5
)

// Enum value maps for PermissionLevel.
var (
	PermissionLevel_name = map[int32]string{
		0: "PERMISSION_LEVEL_UNSPECIFIED",
		1: "PERMISSION_LEVEL_NONE",
		2: "PERMISSION_LEVEL_READ",
		3: "PERMISSION_LEVEL_WRITE",
		4: "PERMISSION_LEVEL_ADMIN",
		5: "PERMISSION_LEVEL_OWNER",
	}
	PermissionLevel_value = map[string]int32{
		"PERMISSION_LEVEL_UNSPECIFIED": 0,
		"PERMISSION_LEVEL_NONE":        1,
		"PERMISSION_LEVEL_READ":        2,
		"PERMISSION_LEVEL_WRITE":       3,
		"PERMISSION_LEVEL_ADMIN":       4,
		"PERMISSION_LEVEL_OWNER":       5,
	}
)

func (x PermissionLevel) Enum() *PermissionLevel {
	p := new(PermissionLevel)
	*p = x
	return p
}

func (x PermissionLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pyairtable_permission_v1_permission_proto_enumTypes[0].Descriptor()
}

func (PermissionLevel) Type() protoreflect.EnumType {
	return &file_pyairtable_permission_v1_permission_proto_enumTypes[0]
}

func (x PermissionLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionLevel.Descriptor instead.
func (PermissionLevel) EnumDescriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{0}
}

// Resource type enum
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNSPECIFIED ResourceType = 0
	ResourceType_RESOURCE_TYPE_WORKSPACE   ResourceType = 1
	ResourceType_RESOURCE_TYPE_BASE        ResourceType = 2
	ResourceType_RESOURCE_TYPE_TABLE       ResourceType = 3
	ResourceType_RESOURCE_TYPE_RECORD      ResourceType = 4
	ResourceType_RESOURCE_TYPE_FIELD       ResourceType = 5
	ResourceType_RESOURCE_TYPE_VIEW        ResourceType = 6
	ResourceType_RESOURCE_TYPE_FORM        ResourceType = 7
	ResourceType_RESOURCE_TYPE_AUTOMATION  ResourceType = 8
	ResourceType_RESOURCE_TYPE_INTERFACE   ResourceType = 9
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNSPECIFIED",
		1: "RESOURCE_TYPE_WORKSPACE",
		2: "RESOURCE_TYPE_BASE",
		3: "RESOURCE_TYPE_TABLE",
		4: "RESOURCE_TYPE_RECORD",
		5: "RESOURCE_TYPE_FIELD",
		6: "RESOURCE_TYPE_VIEW",
		7: "RESOURCE_TYPE_FORM",
		8: "RESOURCE_TYPE_AUTOMATION",
		9: "RESOURCE_TYPE_INTERFACE",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNSPECIFIED": 0,
		"RESOURCE_TYPE_WORKSPACE":   1,
		"RESOURCE_TYPE_BASE":        2,
		"RESOURCE_TYPE_TABLE":       3,
		"RESOURCE_TYPE_RECORD":      4,
		"RESOURCE_TYPE_FIELD":       5,
		"RESOURCE_TYPE_VIEW":        6,
		"RESOURCE_TYPE_FORM":        7,
		"RESOURCE_TYPE_AUTOMATION":  8,
		"RESOURCE_TYPE_INTERFACE":   9,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_pyairtable_permission_v1_permission_proto_enumTypes[1].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_pyairtable_permission_v1_permission_proto_enumTypes[1]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{1}
}

// Permission scope
type PermissionScope int32

const (
	PermissionScope_PERMISSION_SCOPE_UNSPECIFIED PermissionScope = 0
	PermissionScope_PERMISSION_SCOPE_GLOBAL      PermissionScope = 1
	PermissionScope_PERMISSION_SCOPE_WORKSPACE   PermissionScope = 2
	PermissionScope_PERMISSION_SCOPE_BASE        PermissionScope = 3
	PermissionScope_PERMISSION_SCOPE_TABLE       PermissionScope = 4
	PermissionScope_PERMISSION_SCOPE_RECORD      PermissionScope = 5
	PermissionScope_PERMISSION_SCOPE_FIELD       PermissionScope = 6
)

// Enum value maps for PermissionScope.
var (
	PermissionScope_name = map[int32]string{
		0: "PERMISSION_SCOPE_UNSPECIFIED",
		1: "PERMISSION_SCOPE_GLOBAL",
		2: "PERMISSION_SCOPE_WORKSPACE",
		3: "PERMISSION_SCOPE_BASE",
		4: "PERMISSION_SCOPE_TABLE",
		5: "PERMISSION_SCOPE_RECORD",
		6: "PERMISSION_SCOPE_FIELD",
	}
	PermissionScope_value = map[string]int32{
		"PERMISSION_SCOPE_UNSPECIFIED": 0,
		"PERMISSION_SCOPE_GLOBAL":      1,
		"PERMISSION_SCOPE_WORKSPACE":   2,
		"PERMISSION_SCOPE_BASE":        3,
		"PERMISSION_SCOPE_TABLE":       4,
		"PERMISSION_SCOPE_RECORD":      5,
		"PERMISSION_SCOPE_FIELD":       6,
	}
)

func (x PermissionScope) Enum() *PermissionScope {
	p := new(PermissionScope)
	*p = x
	return p
}

func (x PermissionScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionScope) Descriptor() protoreflect.EnumDescriptor {
	return file_pyairtable_permission_v1_permission_proto_enumTypes[2].Descriptor()
}

func (PermissionScope) Type() protoreflect.EnumType {
	return &file_pyairtable_permission_v1_permission_proto_enumTypes[2]
}

func (x PermissionScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionScope.Descriptor instead.
func (PermissionScope) EnumDescriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{2}
}

// Permission model
type Permission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.BaseMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceType  ResourceType           `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType" json:"resource_type,omitempty"`
	ResourceId    string                 `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Level         PermissionLevel        `protobuf:"varint,5,opt,name=level,proto3,enum=pyairtable.permission.v1.PermissionLevel" json:"level,omitempty"`
	Scope         PermissionScope        `protobuf:"varint,6,opt,name=scope,proto3,enum=pyairtable.permission.v1.PermissionScope" json:"scope,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,8,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Inherited     bool                   `protobuf:"varint,9,opt,name=inherited,proto3" json:"inherited,omitempty"`
	InheritedFrom *string                `protobuf:"bytes,10,opt,name=inherited_from,json=inheritedFrom,proto3,oneof" json:"inherited_from,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetMetadata() *v1.BaseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Permission) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Permission) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *Permission) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Permission) GetLevel() PermissionLevel {
	if x != nil {
		return x.Level
	}
	return PermissionLevel_PERMISSION_LEVEL_UNSPECIFIED
}

func (x *Permission) GetScope() PermissionScope {
	if x != nil {
		return x.Scope
	}
	return PermissionScope_PERMISSION_SCOPE_UNSPECIFIED
}

func (x *Permission) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Permission) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Permission) GetInherited() bool {
	if x != nil {
		return x.Inherited
	}
	return false
}

func (x *Permission) GetInheritedFrom() string {
	if x != nil && x.InheritedFrom != nil {
		return *x.InheritedFrom
	}
	return ""
}

// Role model
type Role struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.BaseMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Permissions   []string               `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Scope         PermissionScope        `protobuf:"varint,5,opt,name=scope,proto3,enum=pyairtable.permission.v1.PermissionScope" json:"scope,omitempty"`
	SystemRole    bool                   `protobuf:"varint,6,opt,name=system_role,json=systemRole,proto3" json:"system_role,omitempty"`
	Attributes    map[string]string      `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{1}
}

func (x *Role) GetMetadata() *v1.BaseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Role) GetScope() PermissionScope {
	if x != nil {
		return x.Scope
	}
	return PermissionScope_PERMISSION_SCOPE_UNSPECIFIED
}

func (x *Role) GetSystemRole() bool {
	if x != nil {
		return x.SystemRole
	}
	return false
}

func (x *Role) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// User role assignment
type UserRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *v1.BaseMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId        string                 `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ResourceType  ResourceType           `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType" json:"resource_type,omitempty"`
	ResourceId    string                 `protobuf:"bytes,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	AssignedBy    string                 `protobuf:"bytes,7,opt,name=assigned_by,json=assignedBy,proto3" json:"assigned_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{2}
}

func (x *UserRole) GetMetadata() *v1.BaseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UserRole) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserRole) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *UserRole) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *UserRole) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *UserRole) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *UserRole) GetAssignedBy() string {
	if x != nil {
		return x.AssignedBy
	}
	return ""
}

// Permission check request
type CheckPermissionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceType    ResourceType           `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType" json:"resource_type,omitempty"`
	ResourceId      string                 `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Action          string                 `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
	Context         map[string]string      `protobuf:"bytes,6,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CheckPermissionRequest) Reset() {
	*x = CheckPermissionRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionRequest) ProtoMessage() {}

func (x *CheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*CheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{3}
}

func (x *CheckPermissionRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *CheckPermissionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CheckPermissionRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *CheckPermissionRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *CheckPermissionRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *CheckPermissionRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

// Permission check response
type CheckPermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	Level         PermissionLevel        `protobuf:"varint,2,opt,name=level,proto3,enum=pyairtable.permission.v1.PermissionLevel" json:"level,omitempty"`
	Reasons       []string               `protobuf:"bytes,3,rep,name=reasons,proto3" json:"reasons,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPermissionResponse) Reset() {
	*x = CheckPermissionResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPermissionResponse) ProtoMessage() {}

func (x *CheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*CheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{4}
}

func (x *CheckPermissionResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *CheckPermissionResponse) GetLevel() PermissionLevel {
	if x != nil {
		return x.Level
	}
	return PermissionLevel_PERMISSION_LEVEL_UNSPECIFIED
}

func (x *CheckPermissionResponse) GetReasons() []string {
	if x != nil {
		return x.Reasons
	}
	return nil
}

func (x *CheckPermissionResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Batch permission check request
type BatchCheckPermissionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Checks          []*PermissionCheck     `protobuf:"bytes,3,rep,name=checks,proto3" json:"checks,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchCheckPermissionRequest) Reset() {
	*x = BatchCheckPermissionRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckPermissionRequest) ProtoMessage() {}

func (x *BatchCheckPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckPermissionRequest.ProtoReflect.Descriptor instead.
func (*BatchCheckPermissionRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{5}
}

func (x *BatchCheckPermissionRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *BatchCheckPermissionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BatchCheckPermissionRequest) GetChecks() []*PermissionCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

type PermissionCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CheckId       string                 `protobuf:"bytes,1,opt,name=check_id,json=checkId,proto3" json:"check_id,omitempty"`
	ResourceType  ResourceType           `protobuf:"varint,2,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType" json:"resource_type,omitempty"`
	ResourceId    string                 `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Context       map[string]string      `protobuf:"bytes,5,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionCheck) Reset() {
	*x = PermissionCheck{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionCheck) ProtoMessage() {}

func (x *PermissionCheck) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionCheck.ProtoReflect.Descriptor instead.
func (*PermissionCheck) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{6}
}

func (x *PermissionCheck) GetCheckId() string {
	if x != nil {
		return x.CheckId
	}
	return ""
}

func (x *PermissionCheck) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *PermissionCheck) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *PermissionCheck) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PermissionCheck) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

// Batch permission check response
type BatchCheckPermissionResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Results       map[string]*CheckPermissionResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCheckPermissionResponse) Reset() {
	*x = BatchCheckPermissionResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCheckPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCheckPermissionResponse) ProtoMessage() {}

func (x *BatchCheckPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCheckPermissionResponse.ProtoReflect.Descriptor instead.
func (*BatchCheckPermissionResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{7}
}

func (x *BatchCheckPermissionResponse) GetResults() map[string]*CheckPermissionResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

// Grant permission request
type GrantPermissionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceType    ResourceType           `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType" json:"resource_type,omitempty"`
	ResourceId      string                 `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Level           PermissionLevel        `protobuf:"varint,5,opt,name=level,proto3,enum=pyairtable.permission.v1.PermissionLevel" json:"level,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	Attributes      map[string]string      `protobuf:"bytes,7,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GrantPermissionRequest) Reset() {
	*x = GrantPermissionRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantPermissionRequest) ProtoMessage() {}

func (x *GrantPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantPermissionRequest.ProtoReflect.Descriptor instead.
func (*GrantPermissionRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{8}
}

func (x *GrantPermissionRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *GrantPermissionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GrantPermissionRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *GrantPermissionRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *GrantPermissionRequest) GetLevel() PermissionLevel {
	if x != nil {
		return x.Level
	}
	return PermissionLevel_PERMISSION_LEVEL_UNSPECIFIED
}

func (x *GrantPermissionRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *GrantPermissionRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Grant permission response
type GrantPermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permission    *Permission            `protobuf:"bytes,1,opt,name=permission,proto3" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GrantPermissionResponse) Reset() {
	*x = GrantPermissionResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GrantPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantPermissionResponse) ProtoMessage() {}

func (x *GrantPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantPermissionResponse.ProtoReflect.Descriptor instead.
func (*GrantPermissionResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{9}
}

func (x *GrantPermissionResponse) GetPermission() *Permission {
	if x != nil {
		return x.Permission
	}
	return nil
}

// Revoke permission request
type RevokePermissionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceType    ResourceType           `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType" json:"resource_type,omitempty"`
	ResourceId      string                 `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Level           *PermissionLevel       `protobuf:"varint,5,opt,name=level,proto3,enum=pyairtable.permission.v1.PermissionLevel,oneof" json:"level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RevokePermissionRequest) Reset() {
	*x = RevokePermissionRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePermissionRequest) ProtoMessage() {}

func (x *RevokePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePermissionRequest.ProtoReflect.Descriptor instead.
func (*RevokePermissionRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{10}
}

func (x *RevokePermissionRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *RevokePermissionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RevokePermissionRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *RevokePermissionRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *RevokePermissionRequest) GetLevel() PermissionLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return PermissionLevel_PERMISSION_LEVEL_UNSPECIFIED
}

// Revoke permission response
type RevokePermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokePermissionResponse) Reset() {
	*x = RevokePermissionResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokePermissionResponse) ProtoMessage() {}

func (x *RevokePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokePermissionResponse.ProtoReflect.Descriptor instead.
func (*RevokePermissionResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{11}
}

func (x *RevokePermissionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RevokePermissionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// List permissions request
type ListPermissionsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	UserId          *string                `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ResourceType    *ResourceType          `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType,oneof" json:"resource_type,omitempty"`
	ResourceId      *string                `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3,oneof" json:"resource_id,omitempty"`
	Pagination      *v1.PaginationRequest  `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters         []*v1.Filter           `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListPermissionsRequest) Reset() {
	*x = ListPermissionsRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsRequest) ProtoMessage() {}

func (x *ListPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{12}
}

func (x *ListPermissionsRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *ListPermissionsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *ListPermissionsRequest) GetResourceType() ResourceType {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *ListPermissionsRequest) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ListPermissionsRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPermissionsRequest) GetFilters() []*v1.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

// List permissions response
type ListPermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   []*Permission          `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionsResponse) Reset() {
	*x = ListPermissionsResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsResponse) ProtoMessage() {}

func (x *ListPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{13}
}

func (x *ListPermissionsResponse) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ListPermissionsResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Create role request
type CreateRoleRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Permissions     []string               `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Scope           PermissionScope        `protobuf:"varint,5,opt,name=scope,proto3,enum=pyairtable.permission.v1.PermissionScope" json:"scope,omitempty"`
	Attributes      map[string]string      `protobuf:"bytes,6,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{14}
}

func (x *CreateRoleRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *CreateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRoleRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *CreateRoleRequest) GetScope() PermissionScope {
	if x != nil {
		return x.Scope
	}
	return PermissionScope_PERMISSION_SCOPE_UNSPECIFIED
}

func (x *CreateRoleRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Create role response
type CreateRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          *Role                  `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleResponse) Reset() {
	*x = CreateRoleResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleResponse) ProtoMessage() {}

func (x *CreateRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleResponse.ProtoReflect.Descriptor instead.
func (*CreateRoleResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{15}
}

func (x *CreateRoleResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

// Assign role request
type AssignRoleRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId          string                 `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	ResourceType    ResourceType           `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType" json:"resource_type,omitempty"`
	ResourceId      string                 `protobuf:"bytes,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AssignRoleRequest) Reset() {
	*x = AssignRoleRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleRequest) ProtoMessage() {}

func (x *AssignRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleRequest.ProtoReflect.Descriptor instead.
func (*AssignRoleRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{16}
}

func (x *AssignRoleRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *AssignRoleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AssignRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AssignRoleRequest) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *AssignRoleRequest) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *AssignRoleRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// Assign role response
type AssignRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserRole      *UserRole              `protobuf:"bytes,1,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignRoleResponse) Reset() {
	*x = AssignRoleResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRoleResponse) ProtoMessage() {}

func (x *AssignRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRoleResponse.ProtoReflect.Descriptor instead.
func (*AssignRoleResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{17}
}

func (x *AssignRoleResponse) GetUserRole() *UserRole {
	if x != nil {
		return x.UserRole
	}
	return nil
}

// List user roles request
type ListUserRolesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestMetadata *v1.RequestMetadata    `protobuf:"bytes,1,opt,name=request_metadata,json=requestMetadata,proto3" json:"request_metadata,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ResourceType    *ResourceType          `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=pyairtable.permission.v1.ResourceType,oneof" json:"resource_type,omitempty"`
	ResourceId      *string                `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3,oneof" json:"resource_id,omitempty"`
	Pagination      *v1.PaginationRequest  `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListUserRolesRequest) Reset() {
	*x = ListUserRolesRequest{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRolesRequest) ProtoMessage() {}

func (x *ListUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRolesRequest.ProtoReflect.Descriptor instead.
func (*ListUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{18}
}

func (x *ListUserRolesRequest) GetRequestMetadata() *v1.RequestMetadata {
	if x != nil {
		return x.RequestMetadata
	}
	return nil
}

func (x *ListUserRolesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserRolesRequest) GetResourceType() ResourceType {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *ListUserRolesRequest) GetResourceId() string {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return ""
}

func (x *ListUserRolesRequest) GetPagination() *v1.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// List user roles response
type ListUserRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserRoles     []*UserRole            `protobuf:"bytes,1,rep,name=user_roles,json=userRoles,proto3" json:"user_roles,omitempty"`
	Pagination    *v1.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserRolesResponse) Reset() {
	*x = ListUserRolesResponse{}
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRolesResponse) ProtoMessage() {}

func (x *ListUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pyairtable_permission_v1_permission_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRolesResponse.ProtoReflect.Descriptor instead.
func (*ListUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_pyairtable_permission_v1_permission_proto_rawDescGZIP(), []int{19}
}

func (x *ListUserRolesResponse) GetUserRoles() []*UserRole {
	if x != nil {
		return x.UserRoles
	}
	return nil
}

func (x *ListUserRolesResponse) GetPagination() *v1.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_pyairtable_permission_v1_permission_proto protoreflect.FileDescriptor

const file_pyairtable_permission_v1_permission_proto_rawDesc = "" +
	"\n" +
	")pyairtable/permission/v1/permission.proto\x12\x18pyairtable.permission.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!pyairtable/common/v1/common.proto\x1a\x1bgoogle/protobuf/empty.proto\"\x96\x05\n" +
	"\n" +
	"Permission\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".pyairtable.common.v1.BaseMetadataR\bmetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12K\n" +
	"\rresource_type\x18\x03 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x04 \x01(\tR\n" +
	"resourceId\x12?\n" +
	"\x05level\x18\x05 \x01(\x0e2).pyairtable.permission.v1.PermissionLevelR\x05level\x12?\n" +
	"\x05scope\x18\x06 \x01(\x0e2).pyairtable.permission.v1.PermissionScopeR\x05scope\x12>\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampH\x00R\texpiresAt\x88\x01\x01\x12T\n" +
	"\n" +
	"attributes\x18\b \x03(\v24.pyairtable.permission.v1.Permission.AttributesEntryR\n" +
	"attributes\x12\x1c\n" +
	"\tinherited\x18\t \x01(\bR\tinherited\x12*\n" +
	"\x0einherited_from\x18\n" +
	" \x01(\tH\x01R\rinheritedFrom\x88\x01\x01\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\r\n" +
	"\v_expires_atB\x11\n" +
	"\x0f_inherited_from\"\x8f\x03\n" +
	"\x04Role\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".pyairtable.common.v1.BaseMetadataR\bmetadata\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12 \n" +
	"\vpermissions\x18\x04 \x03(\tR\vpermissions\x12?\n" +
	"\x05scope\x18\x05 \x01(\x0e2).pyairtable.permission.v1.PermissionScopeR\x05scope\x12\x1f\n" +
	"\vsystem_role\x18\x06 \x01(\bR\n" +
	"systemRole\x12N\n" +
	"\n" +
	"attributes\x18\a \x03(\v2..pyairtable.permission.v1.Role.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xda\x02\n" +
	"\bUserRole\x12>\n" +
	"\bmetadata\x18\x01 \x01(\v2\".pyairtable.common.v1.BaseMetadataR\bmetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x17\n" +
	"\arole_id\x18\x03 \x01(\tR\x06roleId\x12K\n" +
	"\rresource_type\x18\x04 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x05 \x01(\tR\n" +
	"resourceId\x12>\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\texpiresAt\x88\x01\x01\x12\x1f\n" +
	"\vassigned_by\x18\a \x01(\tR\n" +
	"assignedByB\r\n" +
	"\v_expires_at\"\x9e\x03\n" +
	"\x16CheckPermissionRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12K\n" +
	"\rresource_type\x18\x03 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x04 \x01(\tR\n" +
	"resourceId\x12\x16\n" +
	"\x06action\x18\x05 \x01(\tR\x06action\x12W\n" +
	"\acontext\x18\x06 \x03(\v2=.pyairtable.permission.v1.CheckPermissionRequest.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa8\x02\n" +
	"\x17CheckPermissionResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed\x12?\n" +
	"\x05level\x18\x02 \x01(\x0e2).pyairtable.permission.v1.PermissionLevelR\x05level\x12\x18\n" +
	"\areasons\x18\x03 \x03(\tR\areasons\x12[\n" +
	"\bmetadata\x18\x04 \x03(\v2?.pyairtable.permission.v1.CheckPermissionResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcb\x01\n" +
	"\x1bBatchCheckPermissionRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12A\n" +
	"\x06checks\x18\x03 \x03(\v2).pyairtable.permission.v1.PermissionCheckR\x06checks\"\xc0\x02\n" +
	"\x0fPermissionCheck\x12\x19\n" +
	"\bcheck_id\x18\x01 \x01(\tR\acheckId\x12K\n" +
	"\rresource_type\x18\x02 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x03 \x01(\tR\n" +
	"resourceId\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12P\n" +
	"\acontext\x18\x05 \x03(\v26.pyairtable.permission.v1.PermissionCheck.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x01\n" +
	"\x1cBatchCheckPermissionResponse\x12]\n" +
	"\aresults\x18\x01 \x03(\v2C.pyairtable.permission.v1.BatchCheckPermissionResponse.ResultsEntryR\aresults\x1am\n" +
	"\fResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12G\n" +
	"\x05value\x18\x02 \x01(\v21.pyairtable.permission.v1.CheckPermissionResponseR\x05value:\x028\x01\"\xa2\x04\n" +
	"\x16GrantPermissionRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12K\n" +
	"\rresource_type\x18\x03 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x04 \x01(\tR\n" +
	"resourceId\x12?\n" +
	"\x05level\x18\x05 \x01(\x0e2).pyairtable.permission.v1.PermissionLevelR\x05level\x12>\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\texpiresAt\x88\x01\x01\x12`\n" +
	"\n" +
	"attributes\x18\a \x03(\v2@.pyairtable.permission.v1.GrantPermissionRequest.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\r\n" +
	"\v_expires_at\"_\n" +
	"\x17GrantPermissionResponse\x12D\n" +
	"\n" +
	"permission\x18\x01 \x01(\v2$.pyairtable.permission.v1.PermissionR\n" +
	"permission\"\xc2\x02\n" +
	"\x17RevokePermissionRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12K\n" +
	"\rresource_type\x18\x03 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x04 \x01(\tR\n" +
	"resourceId\x12D\n" +
	"\x05level\x18\x05 \x01(\x0e2).pyairtable.permission.v1.PermissionLevelH\x00R\x05level\x88\x01\x01B\b\n" +
	"\x06_level\"N\n" +
	"\x18RevokePermissionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xaf\x03\n" +
	"\x16ListPermissionsRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x1c\n" +
	"\auser_id\x18\x02 \x01(\tH\x00R\x06userId\x88\x01\x01\x12P\n" +
	"\rresource_type\x18\x03 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeH\x01R\fresourceType\x88\x01\x01\x12$\n" +
	"\vresource_id\x18\x04 \x01(\tH\x02R\n" +
	"resourceId\x88\x01\x01\x12G\n" +
	"\n" +
	"pagination\x18\x05 \x01(\v2'.pyairtable.common.v1.PaginationRequestR\n" +
	"pagination\x126\n" +
	"\afilters\x18\x06 \x03(\v2\x1c.pyairtable.common.v1.FilterR\afiltersB\n" +
	"\n" +
	"\b_user_idB\x10\n" +
	"\x0e_resource_typeB\x0e\n" +
	"\f_resource_id\"\xab\x01\n" +
	"\x17ListPermissionsResponse\x12F\n" +
	"\vpermissions\x18\x01 \x03(\v2$.pyairtable.permission.v1.PermissionR\vpermissions\x12H\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2(.pyairtable.common.v1.PaginationResponseR\n" +
	"pagination\"\x9a\x03\n" +
	"\x11CreateRoleRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12 \n" +
	"\vpermissions\x18\x04 \x03(\tR\vpermissions\x12?\n" +
	"\x05scope\x18\x05 \x01(\x0e2).pyairtable.permission.v1.PermissionScopeR\x05scope\x12[\n" +
	"\n" +
	"attributes\x18\x06 \x03(\v2;.pyairtable.permission.v1.CreateRoleRequest.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"H\n" +
	"\x12CreateRoleResponse\x122\n" +
	"\x04role\x18\x01 \x01(\v2\x1e.pyairtable.permission.v1.RoleR\x04role\"\xd4\x02\n" +
	"\x11AssignRoleRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x17\n" +
	"\arole_id\x18\x03 \x01(\tR\x06roleId\x12K\n" +
	"\rresource_type\x18\x04 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x05 \x01(\tR\n" +
	"resourceId\x12>\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\texpiresAt\x88\x01\x01B\r\n" +
	"\v_expires_at\"U\n" +
	"\x12AssignRoleResponse\x12?\n" +
	"\tuser_role\x18\x01 \x01(\v2\".pyairtable.permission.v1.UserRoleR\buserRole\"\xe4\x02\n" +
	"\x14ListUserRolesRequest\x12P\n" +
	"\x10request_metadata\x18\x01 \x01(\v2%.pyairtable.common.v1.RequestMetadataR\x0frequestMetadata\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12P\n" +
	"\rresource_type\x18\x03 \x01(\x0e2&.pyairtable.permission.v1.ResourceTypeH\x00R\fresourceType\x88\x01\x01\x12$\n" +
	"\vresource_id\x18\x04 \x01(\tH\x01R\n" +
	"resourceId\x88\x01\x01\x12G\n" +
	"\n" +
	"pagination\x18\x05 \x01(\v2'.pyairtable.common.v1.PaginationRequestR\n" +
	"paginationB\x10\n" +
	"\x0e_resource_typeB\x0e\n" +
	"\f_resource_id\"\xa4\x01\n" +
	"\x15ListUserRolesResponse\x12A\n" +
	"\n" +
	"user_roles\x18\x01 \x03(\v2\".pyairtable.permission.v1.UserRoleR\tuserRoles\x12H\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2(.pyairtable.common.v1.PaginationResponseR\n" +
	"pagination*\xbd\x01\n" +
	"\x0fPermissionLevel\x12 \n" +
	"\x1cPERMISSION_LEVEL_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PERMISSION_LEVEL_NONE\x10\x01\x12\x19\n" +
	"\x15PERMISSION_LEVEL_READ\x10\x02\x12\x1a\n" +
	"\x16PERMISSION_LEVEL_WRITE\x10\x03\x12\x1a\n" +
	"\x16PERMISSION_LEVEL_ADMIN\x10\x04\x12\x1a\n" +
	"\x16PERMISSION_LEVEL_OWNER\x10\x05*\x99\x02\n" +
	"\fResourceType\x12\x1d\n" +
	"\x19RESOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17RESOURCE_TYPE_WORKSPACE\x10\x01\x12\x16\n" +
	"\x12RESOURCE_TYPE_BASE\x10\x02\x12\x17\n" +
	"\x13RESOURCE_TYPE_TABLE\x10\x03\x12\x18\n" +
	"\x14RESOURCE_TYPE_RECORD\x10\x04\x12\x17\n" +
	"\x13RESOURCE_TYPE_FIELD\x10\x05\x12\x16\n" +
	"\x12RESOURCE_TYPE_VIEW\x10\x06\x12\x16\n" +
	"\x12RESOURCE_TYPE_FORM\x10\a\x12\x1c\n" +
	"\x18RESOURCE_TYPE_AUTOMATION\x10\b\x12\x1b\n" +
	"\x17RESOURCE_TYPE_INTERFACE\x10\t*\xe0\x01\n" +
	"\x0fPermissionScope\x12 \n" +
	"\x1cPERMISSION_SCOPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17PERMISSION_SCOPE_GLOBAL\x10\x01\x12\x1e\n" +
	"\x1aPERMISSION_SCOPE_WORKSPACE\x10\x02\x12\x19\n" +
	"\x15PERMISSION_SCOPE_BASE\x10\x03\x12\x1a\n" +
	"\x16PERMISSION_SCOPE_TABLE\x10\x04\x12\x1b\n" +
	"\x17PERMISSION_SCOPE_RECORD\x10\x05\x12\x1a\n" +
	"\x16PERMISSION_SCOPE_FIELD\x10\x062\x94\b\n" +
	"\x11PermissionService\x12v\n" +
	"\x0fCheckPermission\x120.pyairtable.permission.v1.CheckPermissionRequest\x1a1.pyairtable.permission.v1.CheckPermissionResponse\x12\x85\x01\n" +
	"\x14BatchCheckPermission\x125.pyairtable.permission.v1.BatchCheckPermissionRequest\x1a6.pyairtable.permission.v1.BatchCheckPermissionResponse\x12v\n" +
	"\x0fGrantPermission\x120.pyairtable.permission.v1.GrantPermissionRequest\x1a1.pyairtable.permission.v1.GrantPermissionResponse\x12y\n" +
	"\x10RevokePermission\x121.pyairtable.permission.v1.RevokePermissionRequest\x1a2.pyairtable.permission.v1.RevokePermissionResponse\x12v\n" +
	"\x0fListPermissions\x120.pyairtable.permission.v1.ListPermissionsRequest\x1a1.pyairtable.permission.v1.ListPermissionsResponse\x12g\n" +
	"\n" +
	"CreateRole\x12+.pyairtable.permission.v1.CreateRoleRequest\x1a,.pyairtable.permission.v1.CreateRoleResponse\x12g\n" +
	"\n" +
	"AssignRole\x12+.pyairtable.permission.v1.AssignRoleRequest\x1a,.pyairtable.permission.v1.AssignRoleResponse\x12p\n" +
	"\rListUserRoles\x12..pyairtable.permission.v1.ListUserRolesRequest\x1a/.pyairtable.permission.v1.ListUserRolesResponse\x12P\n" +
	"\vHealthCheck\x12\x16.google.protobuf.Empty\x1a).pyairtable.common.v1.HealthCheckResponseB\\ZZgithub.com/pyairtable/pyairtable-protos/generated/go/pyairtable/permission/v1;permissionv1b\x06proto3"

var (
	file_pyairtable_permission_v1_permission_proto_rawDescOnce sync.Once
	file_pyairtable_permission_v1_permission_proto_rawDescData []byte
)

func file_pyairtable_permission_v1_permission_proto_rawDescGZIP() []byte {
	file_pyairtable_permission_v1_permission_proto_rawDescOnce.Do(func() {
		file_pyairtable_permission_v1_permission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pyairtable_permission_v1_permission_proto_rawDesc), len(file_pyairtable_permission_v1_permission_proto_rawDesc)))
	})
	return file_pyairtable_permission_v1_permission_proto_rawDescData
}

var file_pyairtable_permission_v1_permission_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pyairtable_permission_v1_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_pyairtable_permission_v1_permission_proto_goTypes = []any{
	(PermissionLevel)(0),                 // 0: pyairtable.permission.v1.PermissionLevel
	(ResourceType)(0),                    // 1: pyairtable.permission.v1.ResourceType
	(PermissionScope)(0),                 // 2: pyairtable.permission.v1.PermissionScope
	(*Permission)(nil),                   // 3: pyairtable.permission.v1.Permission
	(*Role)(nil),                         // 4: pyairtable.permission.v1.Role
	(*UserRole)(nil),                     // 5: pyairtable.permission.v1.UserRole
	(*CheckPermissionRequest)(nil),       // 6: pyairtable.permission.v1.CheckPermissionRequest
	(*CheckPermissionResponse)(nil),      // 7: pyairtable.permission.v1.CheckPermissionResponse
	(*BatchCheckPermissionRequest)(nil),  // 8: pyairtable.permission.v1.BatchCheckPermissionRequest
	(*PermissionCheck)(nil),              // 9: pyairtable.permission.v1.PermissionCheck
	(*BatchCheckPermissionResponse)(nil), // 10: pyairtable.permission.v1.BatchCheckPermissionResponse
	(*GrantPermissionRequest)(nil),       // 11: pyairtable.permission.v1.GrantPermissionRequest
	(*GrantPermissionResponse)(nil),      // 12: pyairtable.permission.v1.GrantPermissionResponse
	(*RevokePermissionRequest)(nil),      // 13: pyairtable.permission.v1.RevokePermissionRequest
	(*RevokePermissionResponse)(nil),     // 14: pyairtable.permission.v1.RevokePermissionResponse
	(*ListPermissionsRequest)(nil),       // 15: pyairtable.permission.v1.ListPermissionsRequest
	(*ListPermissionsResponse)(nil),      // 16: pyairtable.permission.v1.ListPermissionsResponse
	(*CreateRoleRequest)(nil),            // 17: pyairtable.permission.v1.CreateRoleRequest
	(*CreateRoleResponse)(nil),           // 18: pyairtable.permission.v1.CreateRoleResponse
	(*AssignRoleRequest)(nil),            // 19: pyairtable.permission.v1.AssignRoleRequest
	(*AssignRoleResponse)(nil),           // 20: pyairtable.permission.v1.AssignRoleResponse
	(*ListUserRolesRequest)(nil),         // 21: pyairtable.permission.v1.ListUserRolesRequest
	(*ListUserRolesResponse)(nil),        // 22: pyairtable.permission.v1.ListUserRolesResponse
	nil,                                  // 23: pyairtable.permission.v1.Permission.AttributesEntry
	nil,                                  // 24: pyairtable.permission.v1.Role.AttributesEntry
	nil,                                  // 25: pyairtable.permission.v1.CheckPermissionRequest.ContextEntry
	nil,                                  // 26: pyairtable.permission.v1.CheckPermissionResponse.MetadataEntry
	nil,                                  // 27: pyairtable.permission.v1.PermissionCheck.ContextEntry
	nil,                                  // 28: pyairtable.permission.v1.BatchCheckPermissionResponse.ResultsEntry
	nil,                                  // 29: pyairtable.permission.v1.GrantPermissionRequest.AttributesEntry
	nil,                                  // 30: pyairtable.permission.v1.CreateRoleRequest.AttributesEntry
	(*v1.BaseMetadata)(nil),              // 31: pyairtable.common.v1.BaseMetadata
	(*timestamppb.Timestamp)(nil),        // 32: google.protobuf.Timestamp
	(*v1.RequestMetadata)(nil),           // 33: pyairtable.common.v1.RequestMetadata
	(*v1.PaginationRequest)(nil),         // 34: pyairtable.common.v1.PaginationRequest
	(*v1.Filter)(nil),                    // 35: pyairtable.common.v1.Filter
	(*v1.PaginationResponse)(nil),        // 36: pyairtable.common.v1.PaginationResponse
	(*emptypb.Empty)(nil),                // 37: google.protobuf.Empty
	(*v1.HealthCheckResponse)(nil),       // 38: pyairtable.common.v1.HealthCheckResponse
}
var file_pyairtable_permission_v1_permission_proto_depIdxs = []int32{
	31, // 0: pyairtable.permission.v1.Permission.metadata:type_name -> pyairtable.common.v1.BaseMetadata
	1,  // 1: pyairtable.permission.v1.Permission.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	0,  // 2: pyairtable.permission.v1.Permission.level:type_name -> pyairtable.permission.v1.PermissionLevel
	2,  // 3: pyairtable.permission.v1.Permission.scope:type_name -> pyairtable.permission.v1.PermissionScope
	32, // 4: pyairtable.permission.v1.Permission.expires_at:type_name -> google.protobuf.Timestamp
	23, // 5: pyairtable.permission.v1.Permission.attributes:type_name -> pyairtable.permission.v1.Permission.AttributesEntry
	31, // 6: pyairtable.permission.v1.Role.metadata:type_name -> pyairtable.common.v1.BaseMetadata
	2,  // 7: pyairtable.permission.v1.Role.scope:type_name -> pyairtable.permission.v1.PermissionScope
	24, // 8: pyairtable.permission.v1.Role.attributes:type_name -> pyairtable.permission.v1.Role.AttributesEntry
	31, // 9: pyairtable.permission.v1.UserRole.metadata:type_name -> pyairtable.common.v1.BaseMetadata
	1,  // 10: pyairtable.permission.v1.UserRole.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	32, // 11: pyairtable.permission.v1.UserRole.expires_at:type_name -> google.protobuf.Timestamp
	33, // 12: pyairtable.permission.v1.CheckPermissionRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	1,  // 13: pyairtable.permission.v1.CheckPermissionRequest.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	25, // 14: pyairtable.permission.v1.CheckPermissionRequest.context:type_name -> pyairtable.permission.v1.CheckPermissionRequest.ContextEntry
	0,  // 15: pyairtable.permission.v1.CheckPermissionResponse.level:type_name -> pyairtable.permission.v1.PermissionLevel
	26, // 16: pyairtable.permission.v1.CheckPermissionResponse.metadata:type_name -> pyairtable.permission.v1.CheckPermissionResponse.MetadataEntry
	33, // 17: pyairtable.permission.v1.BatchCheckPermissionRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	9,  // 18: pyairtable.permission.v1.BatchCheckPermissionRequest.checks:type_name -> pyairtable.permission.v1.PermissionCheck
	1,  // 19: pyairtable.permission.v1.PermissionCheck.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	27, // 20: pyairtable.permission.v1.PermissionCheck.context:type_name -> pyairtable.permission.v1.PermissionCheck.ContextEntry
	28, // 21: pyairtable.permission.v1.BatchCheckPermissionResponse.results:type_name -> pyairtable.permission.v1.BatchCheckPermissionResponse.ResultsEntry
	33, // 22: pyairtable.permission.v1.GrantPermissionRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	1,  // 23: pyairtable.permission.v1.GrantPermissionRequest.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	0,  // 24: pyairtable.permission.v1.GrantPermissionRequest.level:type_name -> pyairtable.permission.v1.PermissionLevel
	32, // 25: pyairtable.permission.v1.GrantPermissionRequest.expires_at:type_name -> google.protobuf.Timestamp
	29, // 26: pyairtable.permission.v1.GrantPermissionRequest.attributes:type_name -> pyairtable.permission.v1.GrantPermissionRequest.AttributesEntry
	3,  // 27: pyairtable.permission.v1.GrantPermissionResponse.permission:type_name -> pyairtable.permission.v1.Permission
	33, // 28: pyairtable.permission.v1.RevokePermissionRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	1,  // 29: pyairtable.permission.v1.RevokePermissionRequest.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	0,  // 30: pyairtable.permission.v1.RevokePermissionRequest.level:type_name -> pyairtable.permission.v1.PermissionLevel
	33, // 31: pyairtable.permission.v1.ListPermissionsRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	1,  // 32: pyairtable.permission.v1.ListPermissionsRequest.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	34, // 33: pyairtable.permission.v1.ListPermissionsRequest.pagination:type_name -> pyairtable.common.v1.PaginationRequest
	35, // 34: pyairtable.permission.v1.ListPermissionsRequest.filters:type_name -> pyairtable.common.v1.Filter
	3,  // 35: pyairtable.permission.v1.ListPermissionsResponse.permissions:type_name -> pyairtable.permission.v1.Permission
	36, // 36: pyairtable.permission.v1.ListPermissionsResponse.pagination:type_name -> pyairtable.common.v1.PaginationResponse
	33, // 37: pyairtable.permission.v1.CreateRoleRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	2,  // 38: pyairtable.permission.v1.CreateRoleRequest.scope:type_name -> pyairtable.permission.v1.PermissionScope
	30, // 39: pyairtable.permission.v1.CreateRoleRequest.attributes:type_name -> pyairtable.permission.v1.CreateRoleRequest.AttributesEntry
	4,  // 40: pyairtable.permission.v1.CreateRoleResponse.role:type_name -> pyairtable.permission.v1.Role
	33, // 41: pyairtable.permission.v1.AssignRoleRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	1,  // 42: pyairtable.permission.v1.AssignRoleRequest.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	32, // 43: pyairtable.permission.v1.AssignRoleRequest.expires_at:type_name -> google.protobuf.Timestamp
	5,  // 44: pyairtable.permission.v1.AssignRoleResponse.user_role:type_name -> pyairtable.permission.v1.UserRole
	33, // 45: pyairtable.permission.v1.ListUserRolesRequest.request_metadata:type_name -> pyairtable.common.v1.RequestMetadata
	1,  // 46: pyairtable.permission.v1.ListUserRolesRequest.resource_type:type_name -> pyairtable.permission.v1.ResourceType
	34, // 47: pyairtable.permission.v1.ListUserRolesRequest.pagination:type_name -> pyairtable.common.v1.PaginationRequest
	5,  // 48: pyairtable.permission.v1.ListUserRolesResponse.user_roles:type_name -> pyairtable.permission.v1.UserRole
	36, // 49: pyairtable.permission.v1.ListUserRolesResponse.pagination:type_name -> pyairtable.common.v1.PaginationResponse
	7,  // 50: pyairtable.permission.v1.BatchCheckPermissionResponse.ResultsEntry.value:type_name -> pyairtable.permission.v1.CheckPermissionResponse
	6,  // 51: pyairtable.permission.v1.PermissionService.CheckPermission:input_type -> pyairtable.permission.v1.CheckPermissionRequest
	8,  // 52: pyairtable.permission.v1.PermissionService.BatchCheckPermission:input_type -> pyairtable.permission.v1.BatchCheckPermissionRequest
	11, // 53: pyairtable.permission.v1.PermissionService.GrantPermission:input_type -> pyairtable.permission.v1.GrantPermissionRequest
	13, // 54: pyairtable.permission.v1.PermissionService.RevokePermission:input_type -> pyairtable.permission.v1.RevokePermissionRequest
	15, // 55: pyairtable.permission.v1.PermissionService.ListPermissions:input_type -> pyairtable.permission.v1.ListPermissionsRequest
	17, // 56: pyairtable.permission.v1.PermissionService.CreateRole:input_type -> pyairtable.permission.v1.CreateRoleRequest
	19, // 57: pyairtable.permission.v1.PermissionService.AssignRole:input_type -> pyairtable.permission.v1.AssignRoleRequest
	21, // 58: pyairtable.permission.v1.PermissionService.ListUserRoles:input_type -> pyairtable.permission.v1.ListUserRolesRequest
	37, // 59: pyairtable.permission.v1.PermissionService.HealthCheck:input_type -> google.protobuf.Empty
	7,  // 60: pyairtable.permission.v1.PermissionService.CheckPermission:output_type -> pyairtable.permission.v1.CheckPermissionResponse
	10, // 61: pyairtable.permission.v1.PermissionService.BatchCheckPermission:output_type -> pyairtable.permission.v1.BatchCheckPermissionResponse
	12, // 62: pyairtable.permission.v1.PermissionService.GrantPermission:output_type -> pyairtable.permission.v1.GrantPermissionResponse
	14, // 63: pyairtable.permission.v1.PermissionService.RevokePermission:output_type -> pyairtable.permission.v1.RevokePermissionResponse
	16, // 64: pyairtable.permission.v1.PermissionService.ListPermissions:output_type -> pyairtable.permission.v1.ListPermissionsResponse
	18, // 65: pyairtable.permission.v1.PermissionService.CreateRole:output_type -> pyairtable.permission.v1.CreateRoleResponse
	20, // 66: pyairtable.permission.v1.PermissionService.AssignRole:output_type -> pyairtable.permission.v1.AssignRoleResponse
	22, // 67: pyairtable.permission.v1.PermissionService.ListUserRoles:output_type -> pyairtable.permission.v1.ListUserRolesResponse
	38, // 68: pyairtable.permission.v1.PermissionService.HealthCheck:output_type -> pyairtable.common.v1.HealthCheckResponse
	60, // [60:69] is the sub-list for method output_type
	51, // [51:60] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_pyairtable_permission_v1_permission_proto_init() }
func file_pyairtable_permission_v1_permission_proto_init() {
	if File_pyairtable_permission_v1_permission_proto != nil {
		return
	}
	file_pyairtable_permission_v1_permission_proto_msgTypes[0].OneofWrappers = []any{}
	file_pyairtable_permission_v1_permission_proto_msgTypes[2].OneofWrappers = []any{}
	file_pyairtable_permission_v1_permission_proto_msgTypes[8].OneofWrappers = []any{}
	file_pyairtable_permission_v1_permission_proto_msgTypes[10].OneofWrappers = []any{}
	file_pyairtable_permission_v1_permission_proto_msgTypes[12].OneofWrappers = []any{}
	file_pyairtable_permission_v1_permission_proto_msgTypes[16].OneofWrappers = []any{}
	file_pyairtable_permission_v1_permission_proto_msgTypes[18].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pyairtable_permission_v1_permission_proto_rawDesc), len(file_pyairtable_permission_v1_permission_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pyairtable_permission_v1_permission_proto_goTypes,
		DependencyIndexes: file_pyairtable_permission_v1_permission_proto_depIdxs,
		EnumInfos:         file_pyairtable_permission_v1_permission_proto_enumTypes,
		MessageInfos:      file_pyairtable_permission_v1_permission_proto_msgTypes,
	}.Build()
	File_pyairtable_permission_v1_permission_proto = out.File
	file_pyairtable_permission_v1_permission_proto_goTypes = nil
	file_pyairtable_permission_v1_permission_proto_depIdxs = nil
}
