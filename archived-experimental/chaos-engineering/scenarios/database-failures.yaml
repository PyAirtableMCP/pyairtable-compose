apiVersion: chaos-mesh.org/v1alpha1
kind: PodChaos
metadata:
  name: postgres-restart
  namespace: chaos-engineering
spec:
  action: pod-kill
  mode: one
  selector:
    namespaces:
      - pyairtable
    labelSelectors:
      "app": "postgres"
  duration: "30s"
---
apiVersion: chaos-mesh.org/v1alpha1
kind: NetworkChaos
metadata:
  name: database-connection-timeout
  namespace: chaos-engineering
spec:
  action: delay
  mode: all
  selector:
    namespaces:
      - pyairtable
    labelSelectors:
      "app": "postgres"
  delay:
    latency: "5s"
    correlation: "100"
    jitter: "1s"
  duration: "3m"
---
apiVersion: chaos-mesh.org/v1alpha1
kind: StressChaos
metadata:
  name: database-io-stress
  namespace: chaos-engineering
spec:
  mode: one
  selector:
    namespaces:
      - pyairtable
    labelSelectors:
      "app": "postgres"
  stressors:
    io:
      workers: 4
      size: "1GB"
      ioType: "write"
  duration: "5m"
---
apiVersion: chaos-mesh.org/v1alpha1
kind: IOChaos
metadata:
  name: database-disk-read-delay
  namespace: chaos-engineering
spec:
  action: delay
  mode: one
  selector:
    namespaces:
      - pyairtable
    labelSelectors:
      "app": "postgres"
  volumePath: "/var/lib/postgresql/data"
  path: "**/*"
  delay: "100ms"
  percent: 50
  duration: "10m"
---
apiVersion: chaos-mesh.org/v1alpha1
kind: NetworkChaos
metadata:
  name: redis-cache-network-partition
  namespace: chaos-engineering
spec:
  action: partition
  mode: all
  selector:
    namespaces:
      - pyairtable
    labelSelectors:
      "app": "redis"
  direction: both
  target:
    mode: all
    selector:
      namespaces:
        - pyairtable
      labelSelectors:
        "tier": "backend"
  duration: "2m"