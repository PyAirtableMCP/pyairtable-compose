version: '3.8'

services:
  # Redis - Caching and session storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass testpassword123
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - pyairtable-network

  # PostgreSQL - Database for sessions and metadata
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pyairtable
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=testpassword123
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./migrations:/docker-entrypoint-initdb.d/migrations:ro
    restart: unless-stopped
    networks:
      - pyairtable-network

  # Platform Services - Only service that builds successfully
  platform-services:
    image: ghcr.io/reg-kris/pyairtable-platform-services:latest
    ports:
      - "8007:8007"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - API_KEY=test-api-key-123
      - REQUIRE_API_KEY=false
      - JWT_SECRET=test-jwt-secret-key-for-testing-only
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRES_IN=24h
      - DATABASE_URL=postgresql://postgres:testpassword123@postgres:5432/pyairtable
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=testpassword123
      - CORS_ORIGINS=*
      - PASSWORD_MIN_LENGTH=8
      - PASSWORD_HASH_ROUNDS=12
      - ANALYTICS_RETENTION_DAYS=90
      - METRICS_BATCH_SIZE=100
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - pyairtable-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8007/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Simple API Gateway (Python-based fallback)
  api-gateway:
    image: python:3.11-slim
    ports:
      - "8000:8000"
    working_dir: /app
    command: python simple-api-gateway.py
    environment:
      - PLATFORM_SERVICES_URL=http://platform-services:8007
      - API_KEY=test-api-key-123
    volumes:
      - ./simple-api-gateway.py:/app/simple-api-gateway.py:ro
    depends_on:
      - platform-services
    restart: unless-stopped
    networks:
      - pyairtable-network

  # Frontend (using Node.js base image and simple HTML)
  frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./simple-chat-frontend.html:/usr/share/nginx/html/index.html:ro
    restart: unless-stopped
    networks:
      - pyairtable-network

networks:
  pyairtable-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local