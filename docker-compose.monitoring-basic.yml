version: '3.8'

# Basic Monitoring Stack for Immediate PyAirtable Visibility
# Focused on getting quick visibility into service health and performance
# Optimized for local development and rapid deployment

services:
  # Prometheus - Metrics collection and alerting
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus-basic
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    volumes:
      - ./monitoring/prometheus-basic.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert_rules_basic.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus-basic-data:/prometheus
    restart: unless-stopped
    networks:
      - pyairtable-network
      - monitoring-basic
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana-basic
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pyairtable2025
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel
      - GF_ALERTING_ENABLED=false
      - GF_UNIFIED_ALERTING_ENABLED=false
      - GF_DATABASE_TYPE=sqlite3
      - GF_LOG_LEVEL=info
    volumes:
      - ./monitoring/grafana-basic/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana-basic/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-basic-data:/var/lib/grafana
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - monitoring-basic
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # AlertManager - Basic alerting
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager-basic
    ports:
      - "9094:9093"
    volumes:
      - ./monitoring/alertmanager-basic.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-basic-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=info'
    restart: unless-stopped
    networks:
      - monitoring-basic
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Loki - Log aggregation for troubleshooting
  loki:
    image: grafana/loki:2.8.0
    container_name: loki-basic
    ports:
      - "3101:3100"
    command: -config.file=/etc/loki/loki.yml
    volumes:
      - ./monitoring/loki-basic.yml:/etc/loki/loki.yml:ro
      - loki-basic-data:/loki
    restart: unless-stopped
    networks:
      - monitoring-basic
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Promtail - Log collection
  promtail:
    image: grafana/promtail:2.8.0
    container_name: promtail-basic
    volumes:
      - ./monitoring/promtail-basic.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - promtail-positions:/tmp/positions
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - monitoring-basic

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: node-exporter-basic
    ports:
      - "9101:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
    restart: unless-stopped
    networks:
      - monitoring-basic
    pid: host

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor-basic
    ports:
      - "8082:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    networks:
      - monitoring-basic
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg

  # BlackBox Exporter - Health probes
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: blackbox-exporter-basic
    ports:
      - "9116:9115"
    volumes:
      - ./monitoring/blackbox-basic.yml:/etc/blackbox_exporter/config.yml:ro
    restart: unless-stopped
    networks:
      - pyairtable-network
      - monitoring-basic

volumes:
  prometheus-basic-data:
    driver: local
  grafana-basic-data:
    driver: local
  alertmanager-basic-data:
    driver: local
  loki-basic-data:
    driver: local
  promtail-positions:
    driver: local

networks:
  pyairtable-network:
    external: true
  monitoring-basic:
    driver: bridge
    name: pyairtable-monitoring-basic